[{"authors":["admin"],"categories":null,"content":"I am near 40. I have spent quite a time in the software industry, not as long as \u0026ldquo;Uncle\u0026rdquo; Bob Martin of cause, but have also seen some technologies come and go. Words like this was in favor once: Delphi, Java, HTML, JavaScript, PHP\u0026hellip; Plus my beard is making me look like wise one üôÇ\nIn my past I have designed and developed standalone and client - server applications C++/Python, with databases like Oracle DB, PosgreSQL, MySQL, SQLite. Created applications serving CRM, web automated order processing, simulation of technological operation of railroad rolling stock.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://denis-trofimov.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am near 40. I have spent quite a time in the software industry, not as long as \u0026ldquo;Uncle\u0026rdquo; Bob Martin of cause, but have also seen some technologies come and go. Words like this was in favor once: Delphi, Java, HTML, JavaScript, PHP\u0026hellip; Plus my beard is making me look like wise one üôÇ\nIn my past I have designed and developed standalone and client - server applications C++/Python, with databases like Oracle DB, PosgreSQL, MySQL, SQLite.","tags":null,"title":"Denis Trofimov","type":"authors"},{"authors":[],"categories":[],"content":"I developed the site of ‚ÄúNew Year\u0026rsquo;s Miracle‚Äù project. It was a Django powered site (built from scratch) to collect orders for personalized Happy New Year greetings.\nI used Jinja 2 templates to put Django install front-end assets given as HTML, CSS, JavaScript bundle.\nFor storage on site I used PostreSQL DB 10. Delayed jobs as email sending, calling was done using Celery queue and Redis Storage.\nI created a Docker container with UWSGI + Django for deployment on Nginx web server, and tested this container works on 38 core bare metal configuration.\n  Screenshot of call order received     Screenshot of Django admin view   Service description below I took from Russian resource for parents www.ya-roditel.ru direct link\nIt is Google translated to English.\n As part of the ‚ÄúNew Year\u0026rsquo;s Miracle‚Äù project, a unique service of free personalized phone call from Santa Claus began its work. Previously, parents can choose not only a name, but also an individual instruction to the child from Santa Claus.\n‚ÄúHot lines‚Äù of Santa Claus have been working for more than a year, but, as a rule, they mean receiving incoming calls and playing out non-personalized greetings. For the first time in history, the new service will allow you to receive a personalized call from the main New Year wizard. Having picked up the phone, the child will hear his name 5 times, and if at the same time he needs to be more attentive to his studies or not to refuse vegetables at dinner, Grandfather will definitely say so in his congratulation. Parents choose a convenient date and time for the call on their own - the coveted call can be heard at least five minutes after the application has been left.\nIn addition, if the child has a brother or sister, congratulations will be addressed to both of them. A one-time congratulation is also provided for three children.\nThe project manager Maxim Shuvaev noted that over the last 7 days of December it is planned to make up to a million calls, but so far only in Russia. In the future, it is planned to connect to the shares of other CIS countries.\n ","date":1546369465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546369465,"objectID":"27db4e82992c46fb98dc56b86c55b391","permalink":"https://denis-trofimov.github.io/project/django-personalized-happy-new-year-greetings-call-order/","publishdate":"2019-01-01T22:04:25+03:00","relpermalink":"/project/django-personalized-happy-new-year-greetings-call-order/","section":"project","summary":"A Django site built from scratch","tags":["python","django","postresql","celery","redis","UWSGI","docker","nginx","Jinja2","web"],"title":"New Year's Miracle","type":"project"},{"authors":null,"categories":["networking"],"content":"Yes, the¬†Moscow Python Conf++ 2018 conference was awesome. Started so many acquaintances with the pythonists who make impact in the software world! I got into picture at the stand of Moscow.Python on 1:50.\nI will come to the next one too!\nMixed russian and english content, you are welcome to watch!\n  ","date":1542051090,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542051090,"objectID":"5a4615317582dcd039faf649cbe5b037","permalink":"https://denis-trofimov.github.io/moscow-python-conf-2018-video/","publishdate":"2018-11-12T19:31:30Z","relpermalink":"/moscow-python-conf-2018-video/","section":"post","summary":"Yes, the¬†Moscow Python Conf++ 2018 conference was awesome. Started so many acquaintances with the pythonists who make impact in the software world! I got into picture at the stand of Moscow.Python on 1:50.\nI will come to the next one too!\nMixed russian and english content, you are welcome to watch!\n  ","tags":["conference","developer","python","soft skills"],"title":"Moscow Python Conf++ 2018 video report.","type":"post"},{"authors":null,"categories":["learning"],"content":" This post describes how dictionaries are implemented in the Python language.  This article is actually a repost of originally posted at¬†Laurent Luce\u0026#8217;s Blog August 29, 2011¬†by Laurent Luce. I mentor several students of russian Learn Python courses. They have questions about structures in Python and how to use them. I found this post¬†a good help to me and possibly to my students.  Dictionaries are indexed by keys and they can be seen as associative arrays. Let‚Äôs add 3 key/value pairs to a dictionary:\n\u0026gt;\u0026gt;\u0026gt; d = {'a': 1, 'b': 2} \u0026gt;\u0026gt;\u0026gt; d['c'] = 3 \u0026gt;\u0026gt;\u0026gt; d {'a': 1, 'b': 2, 'c': 3}  The values can be accessed this way:\n\u0026gt;\u0026gt;\u0026gt; d['a'] 1 \u0026gt;\u0026gt;\u0026gt; d['b'] 2 \u0026gt;\u0026gt;\u0026gt; d['c'] 3 \u0026gt;\u0026gt;\u0026gt; d['d'] Traceback (most recent call last): File \u0026quot;\u0026lt;stdin\u0026gt;\u0026quot;, line 1, in \u0026lt;module\u0026gt; KeyError: 'd'  The key ‚Äòd‚Äô does not exist so a KeyError exception is raised.\nHash tables Python dictionaries are implemented using hash tables. It is an array whose indexes are obtained using a hash function on the keys. The goal of a hash function is to distribute the keys evenly in the array. A good hash function minimizes the number of collisions e.g. different keys having the same hash. Python does not have this kind of hash function. Its most important hash functions (for strings and ints) are very regular in common cases:\n\u0026gt;\u0026gt;\u0026gt; map(hash, (0, 1, 2, 3)) [0, 1, 2, 3] \u0026gt;\u0026gt;\u0026gt; map(hash, (\u0026quot;namea\u0026quot;, \u0026quot;nameb\u0026quot;, \u0026quot;namec\u0026quot;, \u0026quot;named\u0026quot;)) [-1658398457, -1658398460, -1658398459, -1658398462]  We are going to assume that we are using strings as keys for the rest of this post. The hash function for strings in Python is defined as:\narguments: string object returns: hash function string_hash: if hash cached: return it set len to string's length initialize var p pointing to 1st char of string object set x to value pointed by p left shifted by 7 bits while len \u0026gt;= 0: set var x to (1000003 * x) xor value pointed by p increment pointer p set x to x xor length of string object cache x as the hash so we don't need to calculate it again return x as the hash  If you run hash(‚Äòa‚Äô) in Python, it will execute string_hash() and return 12416037344. Here we assume we are using a 64-bit machine.\nIf an array of size x is used to store the key/value pairs then we use a mask equal to x-1 to calculate the slot index of the pair in the array. This makes the computation of the slot index fast. The probability to find an empty slot is high due to the resizing mechanism described below. This means that having a simple computation makes sense in most of the cases. If the size of the array is 8, the index for ‚Äòa‚Äô will be: hash(‚Äòa‚Äô) \u0026amp; 7 = 0. The index for ‚Äòb‚Äô is 3, the index for ‚Äòc‚Äô is 2, the index for ‚Äòz‚Äô is 3 which is the same as ‚Äòb‚Äô, here we have a collision.\n  We can see that the Python hash function does a good job when the keys are consecutive which is good because it is quite common to have this type of data to work with. However, once we add the key ‚Äòz‚Äô, there is a collision because it is not consecutive enough.  We could use a linked list to store the pairs having the same hash but it would increase the lookup time e.g. not O(1) average anymore. The next section describes the collision resolution method used in the case of Python dictionaries.  Open addressing \n Open addressing is a method of collision resolution where probing is used. In case of ‚Äòz‚Äô, the slot index 3 is already used in the array so we need to probe for a different index to find one which is not already used. Adding a key/value pair will average O(1) and the lookup operation too.  A quadratic probing sequence is used to find a free slot. The code is the following: j = (5*j) + 1 + perturb; perturb \u0026gt;\u0026gt;= PERTURB_SHIFT; use j % 2**i as the next table index;   Recurring on 5*j+1 quickly magnifies small differences in the bits that didn‚Äôt affect the initial index. The variable ‚Äúperturb‚Äù gets the other bits of the hash code into play.  Just out of curiosity, let‚Äôs look at the probing sequence when the table size is 32 and j = 3.\n3 -\u0026gt; 11 -\u0026gt; 19 -\u0026gt; 29 -\u0026gt; 5 -\u0026gt; 6 -\u0026gt; 16 -\u0026gt; 31 -\u0026gt; 28 -\u0026gt; 13 -\u0026gt; 2‚Ä¶  You can read more about this probing sequence by looking at the source code of¬†dictobject.c. A detailed explanation of the probing mechanism can be found at the top of the file.   Now, let‚Äôs look at the Python internal code along with an example.  Dictionary C structures \n The following C structure is used to store a dictionary entry: key/value pair. The hash, key and value are stored. PyObject is the base class of the Python objects. typedef struct { Py_ssize_t me_hash; PyObject *me_key; PyObject *me_value; } PyDictEntry;   The following structure represents a dictionary. ma_fill is the number of used slots + dummy slots. A slot is marked dummy when a key pair is removed. ma_used is the number of used slots (active). ma_mask is equal to the array‚Äôs size minus 1 and is used to calculate the slot index. ma_table is the array and ma_smalltable is the initial array of size 8. typedef struct _dictobject PyDictObject; struct _dictobject { PyObject_HEAD Py_ssize_t ma_fill; Py_ssize_t ma_used; Py_ssize_t ma_mask; PyDictEntry *ma_table; PyDictEntry *(*ma_lookup)(PyDictObject *mp, PyObject *key, long hash); PyDictEntry ma_smalltable[PyDict_MINSIZE]; };  Dictionary initialization  When you first create a dictionary, the function PyDict_New() is called. I removed some of the lines and converted the C code to pseudocode to concentrate on the key concepts. returns new dictionary object function PyDict_New: allocate new dictionary object clear dictionary's table set dictionary's number of used slots + dummy slots (ma_fill) to 0 set dictionary's number of active slots (ma_used) to 0 set dictionary's mask (ma_value) to dictionary size - 1 = 7 set dictionary's lookup function to lookdict_string return allocated dictionary object   Adding items \n When a new key/value pair is added, PyDict_SetItem() is called. This function takes a pointer to the dictionary object and the key/value pair. It checks if the key is a string and calculates the hash or reuses the one cached if it exists. insertdict() is called to add the new key/value pair and the dictionary is resized if the number of used slots + dummy slots is greater than 2\u0026frasl;3 of the array‚Äôs size.\nWhy 2\u0026frasl;3? It is to make sure the probing sequence can find a free slot fast enough. We will look at the resizing function later. arguments: dictionary, key, value returns: 0 if OK or -1 function PyDict_SetItem: if key's hash cached: use hash else: calculate hash call insertdict with dictionary object, key, hash and value if key/value pair added successfully and capacity over 2/3: call dictresize to resize dictionary's table   inserdict() uses the lookup function lookdict_string() to find a free slot. This is the same function used to find a key. lookdict_string() calculates the slot index using the hash and the mask values. If it cannot find the key in the slot index = hash \u0026amp; mask, it starts probing using the loop described above, until it finds a free slot. At the first probing try, if the key is null, it returns the dummy slot if found during the first lookup. This gives priority to re-use the previously deleted slots.  We want to add the following key/value pairs: {‚Äòa‚Äô: 1, ‚Äòb‚Äô: 2‚Ä≤, ‚Äòz‚Äô: 26, ‚Äòy‚Äô: 25, ‚Äòc‚Äô: 5, ‚Äòx‚Äô: 24}. This is what happens:  A dictionary structure is allocated with internal table size of 8.  PyDict_SetItem: key = \u0026#8216;a\u0026#8217;, value = 1  hash = hash(\u0026#8216;a\u0026#8217;) = 12416037344 insertdict  lookdict_string  slot index = hash \u0026#038; mask = 12416037344 \u0026#038; 7 = 0 slot 0 is not used so return it  init entry at index 0 with key, value and hash ma_used = 1, ma_fill = 1   PyDict_SetItem: key = \u0026#8216;b\u0026#8217;, value = 2  hash = hash(\u0026#8216;b\u0026#8217;) = 12544037731 insertdict  lookdict_string  slot index = hash \u0026#038; mask = 12544037731 \u0026#038; 7 = 3 slot 3 is not used so return it  init entry at index 3 with key, value and hash ma_used = 2, ma_fill = 2   PyDict_SetItem: key = \u0026#8216;z\u0026#8217;, value = 26  hash = hash(\u0026#8216;z\u0026#8217;) = 15616046971 insertdict  lookdict_string  slot index = hash \u0026#038; mask = 15616046971 \u0026#038; 7 = 3 slot 3 is used so probe for a different slot: 5 is free  init entry at index 5 with key, value and hash ma_used = 3, ma_fill = 3   PyDict_SetItem: key = \u0026#8216;y\u0026#8217;, value = 25  hash = hash(\u0026#8216;y\u0026#8217;) = 15488046584 insertdict  lookdict_string  slot index = hash \u0026#038; mask = 15488046584 \u0026#038; 7 = 0 slot 0 is used so probe for a different slot: 1 is free  init entry at index 1 with key, value and hash ma_used = 4, ma_fill = 4   PyDict_SetItem: key = \u0026#8216;c\u0026#8217;, value = 3  hash = hash(\u0026#8216;c\u0026#8217;) = 12672038114 insertdict  lookdict_string  slot index = hash \u0026#038; mask = 12672038114 \u0026#038; 7 = 2 slot 2 is free so return it  init entry at index 2 with key, value and hash ma_used = 5, ma_fill = 5   PyDict_SetItem: key = \u0026#8216;x\u0026#8217;, value = 24  hash = hash(\u0026#8216;x\u0026#8217;) = 15360046201 insertdict  lookdict_string  slot index = hash \u0026#038; mask = 15360046201 \u0026#038; 7 = 1 slot 1 is used so probe for a different slot: 7 is free  init entry at index 7 with key, value and hash ma_used = 6, ma_fill = 6     This is what we have so far:   6 slots on 8 are used now so we are over 2\u0026frasl;3 of the array‚Äôs capacity. dictresize() is called to allocate a larger array. This function also takes care of copying the old table entries to the new table.  dictresize() is called with minused = 24 in our case which is 4 * ma_used. 2 * ma_used is used when the number of used slots is very large (greater than 50000). Why 4 times the number of used slots? It reduces the number of resize steps and it increases sparseness.  The new table size needs to be greater than 24 and it is calculated by shifting the current size 1 bit left until it is greater than 24. It ends up being 32 e.g. 8 -\u0026gt; 16 -\u0026gt; 32.  This is what happens with our table during resizing: a new table of size 32 is allocated. Old table entries are inserted into the new table using the new mask value which is 31. We end up with the following:   Removing items \n PyDict_DelItem() is called to remove an entry. The hash for this key is calculated and the lookup function is called to return the entry. The slot is now a dummy slot.  We want to remove the key ‚Äòc‚Äô from our dictionary. We end up with the following array:   Note that the delete item operation doesn‚Äôt trigger an array resize if the number of used slots is much less that the total number of slots. However, when a key/value pair is added, the need for resize is based on the number of used slots + dummy slots so it can shrink the array too.  That‚Äôs it for now. I hope you enjoyed the article. Please write a comment if you have any feedback. \n   \u0026nbsp;  Originally posted at¬†Laurent Luce\u0026#8217;s Blog August 29, 2011¬†by Laurent Luce. ","date":1538161978,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538161978,"objectID":"d5fe5ae0f21fcd5cf5a2ef8eaf2a650b","permalink":"https://denis-trofimov.github.io/how-dictionaries-are-implemented-in-the-python-language/","publishdate":"2018-09-28T19:12:58Z","relpermalink":"/how-dictionaries-are-implemented-in-the-python-language/","section":"post","summary":" This post describes how dictionaries are implemented in the Python language.  This article is actually a repost of originally posted at¬†Laurent Luce\u0026#8217;s Blog August 29, 2011¬†by Laurent Luce. I mentor several students of russian Learn Python courses. They have questions about structures in Python and how to use them. I found this post¬†a good help to me and possibly to my students. ","tags":["algorithms","code","data structures","interview","programming","python"],"title":"How dictionaries are implemented in the Python language","type":"post"},{"authors":null,"categories":["team lead"],"content":"Repost of https://simpleprogrammer.com/mob-programming/.\nMob programming is the best approach for many development applications. Mob projects result in a more finished project at release, with fewer bugs. By focusing on one project at a time, teams can complete projects more efficiently, and those projects are higher quality, requiring fewer revisions.\nThe Project Management Institute‚Äôs¬†2017 Pulse of the Profession¬†survey reports that 71 percent of organizations now use¬†agile methods¬†to complete projects. Included among agile approaches is mob programming,¬†defined by the Agile Alliance¬†as ‚Äúa software development approach where the whole team works on the same thing, at the same time, in the same space, and at the same computer.‚Äù Picture multiple engineers at one station working collaboratively on one project.\nWhile many organizations have adopted mob programming as a core part of their development skill set, not all development organizations have bought in.\nStill, to implement mob programming successfully, you need buy-in from two important groups at your organization‚Äîthe executive team and the programmers themselves.\nBy following the strategies below, you can get organization buy-in for mob programming from top to bottom and start using this agile development methodology to provide superior finished products for clients both inside and outside your organization.\nGetting Buy-in From Leadership As far back as 2000, the benefits of developers teaming up on projects to solve problems have been evaluated against the performance of individuals. An oft-cited¬†joint study¬†between the University of North Carolina and the University of Utah showed that paired programmers were 15 percent more successful in solving problems and that their solutions did so with fewer lines of code.\nThat may not be an impressive enough statistic for senior leadership, however. Shouldn‚Äôt it be at least 100 percent more efficient in order to be cost-effective?\nThe truth of the matter is that such small efficiency gains in the short run may not be convincing. It‚Äôs a long game, and you‚Äôll need to open leadership‚Äôs eyes to the possibilities of multiple projects spanning months, even years.\nIf you can get leadership to agree to a six- to 12-month trial for mob programming, here are some of the benefits your organization will see:\n Fully inventoried projects:¬†With groups working more thoroughly and quickly on fewer projects, projects are less likely to be abandoned or forgotten, and more projects are fully completed. More eyes on every project means projects are more complete when they are released to the world. Shorter turnaround on projects:¬†Projects are completed quicker than when worked on by individual developers. With more eyes on each project, roadblocks are more easily overcome, and solutions to problems can quickly be brainstormed. Fewer issues in live projects:¬†As the projects are fully inventoried with more people reviewing every line of code, fewer bugs make it to the production environment. With individual developers working on projects, it‚Äôs often understood that there will be bugs that need to be fixed while a platform is live. You can eliminate a lot of this necessary rework through mob programming. Quicker onboarding for programmers:¬†Onboarding into a mob programming environment is more efficient, as you can drop new developers right into a mob that‚Äôs already at work on a project and get them contributing immediately rather than having to divert resources for training and management of new programmers‚Äô early projects with your organization.  Over time, mob programming improves efficiency not only in the completion of successful projects but also in the integration of¬†new team members. You may not see the return on investment right away, but over time, it will be evident.\nBetter results, faster, with fewer abandoned projects‚Äîthat‚Äôs something any senior leader can get behind.\nGetting Buy-in From Programmers, Developers, and Engineers Many engineers, developers, and programmers are used to¬†working alone‚Äîputting on the headphones and sitting down to crank out code, cut off from the outside world, for hours at a time. How do you get people who are used to working alone to be active participants in a group environment where the major reason for increased success is teamwork?\nIn our experience, having gone through many iterations of mob programming while integrating it into the organization at Clearlink, not everyone is a good fit for mob programming‚Äîbut many more than you would expect actually are, once they are involved.\nWhy is that? Believe it or not, engineers like socializing with their colleagues, they just haven‚Äôt always had the chance to do so. Once they realize the level of engagement and the quality of code that is created while working collaboratively, job satisfaction increases, learning increases, and enhanced team bonding occurs. Mob programming is also a meritocracy where the best idea wins, and everyone in the mob has an equal voice‚Äîfrom the most senior developer on the team down to the newest arrival.\nEach mob contains two roles:¬†_the driver_¬†and¬†the navigator(s). The driver sits at the computer, inputting the code, while the navigators tell the driver what to type. These roles switch in the mob at regular eight to 15-minute intervals, giving everyone an equal chance to drive and to navigate.\nEveryone remains actively involved in the process, with ideas being shared and implemented quickly. Since everyone gets a chance to navigate, junior programmers gain confidence by asserting their ideas.\nWe recommend, either at the completion of a project or at the end of each workweek, recognizing mob team members for their contributions to the project(s) they have worked on. Also, allow programmers to share what they learned and what they had trouble with. After a few projects and a few of these recognition and retrospective meetings, your team members will be comfortable working together and fully integrated into the mob programming mindset.\nMaking the Jump Changing development work from an individual to a mob programming style can be a big leap‚Äîone that can result in a few stumbles along the way. But once you get buy-in from leadership for a trial and can get some programmers on board, you‚Äôll see¬†how it can benefit your organization.\nWe‚Äôve given you some navigation‚Äîso get ready to drive.\n Photo by¬†Georgia National Guard¬†CC 2.0 ","date":1536963470,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536963470,"objectID":"ff2998bb2b6419749b7567cc7abcb13d","permalink":"https://denis-trofimov.github.io/getting-mob-programming-buy-in-at-your-organization/","publishdate":"2018-09-14T22:17:50Z","relpermalink":"/getting-mob-programming-buy-in-at-your-organization/","section":"post","summary":"Repost of https://simpleprogrammer.com/mob-programming/.\nMob programming is the best approach for many development applications. Mob projects result in a more finished project at release, with fewer bugs. By focusing on one project at a time, teams can complete projects more efficiently, and those projects are higher quality, requiring fewer revisions.\n","tags":["agile","effectiveness","leadership","programming","soft skills","team work"],"title":"Getting Mob Programming Buy-In at Your Organization","type":"post"},{"authors":null,"categories":["learning"],"content":"Review of Kevlin Henney`s talk Seven Ineffective Coding Habits of Many Programmers I watched this video from the start till the end. I see this coding habits very often. I fought unsustainable spacing the wrong way in the past.\nKevlin Henney`s talk video description  Habits help you manage the code complexity. You apply existing skill and knowledge automatically to the detail while focusing on the bigger picture.\nBut because you acquire habits largely by imitation, and rarely question them, how do you know your habits are effective? Many of the habits that programmers have for naming, formatting, commenting and unit testing do not stand up as rational and practical on closer inspection. Kevlin Henney¬†@kevlinhenney¬†examines seven coding habits that are not as effective as programmers believe, and to suggest alternatives.\n    Seven Ineffective Coding Habits of Many Programmers   noise code\n  unsustainable spacing\n  lego naming\n  underabstraction\n  unencapsulated state\n  getters and setters\n  uncohesive tests\n   ","date":1536523400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536523400,"objectID":"e5cd27a3a64701b7cd61c70d1cdc8077","permalink":"https://denis-trofimov.github.io/review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/","publishdate":"2018-09-09T20:03:20Z","relpermalink":"/review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/","section":"post","summary":"Review of Kevlin Henney`s talk Seven Ineffective Coding Habits of Many Programmers I watched this video from the start till the end. I see this coding habits very often. I fought unsustainable spacing the wrong way in the past.\n","tags":["developer","effectiveness","learning","programming","style"],"title":"Review of Kevlin Henney`s talk Seven Ineffective Coding Habits of Many Programmers","type":"post"},{"authors":null,"categories":["learning"],"content":"Hello!\nI got fresh new article from The Simple Programmer blog,¬†Lessons Learned by Mentoring Programmers¬†.\nIt is a good coincidence, for me it is the right time to get to know about¬†mentoring.\nI will take part the learn.python.ru course in Moscow as a new curator for a group of 5-6 students. I am totally new to all this field,¬†teaching programming. I am to help¬†students to get well with Python language, answer questions, check they homework, help to plan they project. That course will be 10 weeks long.\nI urge you to read¬†Ryan`s post. It covers the topics:\n  Get well with mentor imposter syndrome.\n  Encourage your mentee work because they need it.\n  If the concept is good not nitpick the form.\n  Your Way Isn‚Äôt Always the Only Way.\n  You Are Not Wasting Their Time.\n  Use Questions to Collaborate\n  Thanks to author Ryan Palo!¬†Please keep on writing and sharing!\n Pair programming photo CC 2.0 Kang-min Liu https://www.flickr.com/photos/gugod/  ","date":1536168526,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536168526,"objectID":"0ae06b4ef41e0f88acafd2817636eea0","permalink":"https://denis-trofimov.github.io/lessons-learned-by-mentoring-programmers-repost/","publishdate":"2018-09-05T17:28:46Z","relpermalink":"/lessons-learned-by-mentoring-programmers-repost/","section":"post","summary":"Hello!\nI got fresh new article from The Simple Programmer blog,¬†Lessons Learned by Mentoring Programmers¬†.\nIt is a good coincidence, for me it is the right time to get to know about¬†mentoring.\nI will take part the learn.python.ru course in Moscow as a new curator for a group of 5-6 students. I am totally new to all this field,¬†teaching programming. I am to help¬†students to get well with Python language, answer questions, check they homework, help to plan they project.","tags":["learning","mentoring","python","repost","soft skills"],"title":"Lessons Learned by Mentoring Programmers repost.","type":"post"},{"authors":null,"categories":["machine learning"],"content":"Joining phenomenal deep learning course fast.ai using free Google Colaboratory setup. My colleague Ilia Lebedev¬†@melevir at twitter recommended me a cool deep learning course at¬†http://course.fast.ai.\nMuch appreciation to¬†Jeremyand¬†Rachelwho gave us this opportunity to learn.¬†They position themself as a course for software developers, not data scientists. This course is of January 2018, is the second version.\nListen that the course said for itself.\n YOU WILL LEARN HOW TO:  NewSet up your own GPU server in the cloud Use the fastai and Pytorch libraries in¬†pythonto train and run deep learning models Build, debug, and visualize a state of the art convolutional neural network (CNN) for recognizing images Build state of the art recommendation systems using neural-network based collaborative filtering Build state of the art time series and structured data models using categorical embeddings Get great results even from small datasets, by using transfer learning Understand the components of a neural network, including activation functions, dense and convolutional layers, and optimizers Build, debug, and visualize a recurrent neural network (RNN) for natural language processing (NLP), including developing a sentiment classifier which beat all previous academic benchmarks. Recognize and deal with over-fitting, by using data augmentation, dropout, batch normalization, and similar techniques   Back to a¬†setup for fast.ai course¬†using free Google Colaboratory. In this post, I will show how to use organize setup of¬†Google Colaboratory¬†for the fast.ai deep learning course. You should repeat¬†this simple steps every time you connect to a new GPU.\nIn order to train a neural network, we will most certainly need Graphics Processing Unit (GPU)‚Ää\u0026#8211; and not everyone have a fast one.¬†Without a decent GPU a singe step will last for hours instead of minutes.¬†Sign-up to¬†Google Colaboratory¬†to get a hosted Jupyter notebook environment connectedwith a free Tesla K80 GPU.\nYou can use GPU as a backend free for 12 hours at a time.¬†That is very good news for us!The steps to repeat every time you connect to a new GPU. {.aspectRatioPlaceholder.is-locked} Setup step 0: Select Free¬†GPU It is so simple to alter default hardware¬†(CPU to GPU or vice versa); just follow¬†Edit  Notebook settings¬†or¬†RuntimeChange runtime type¬†and¬†select GPU¬†as¬†Hardware accelerator. Setup step 1: install libraries¬†for fast.ai¬†course. Enter this code in a new code block on top of a notebook:\n# Install torch compatible with fastai from os import path from wheel.pep425tags import get_abbr_impl, get_impl_ver, get_abi_tag platform = '{}{}-{}'.format(get_abbr_impl(), get_impl_ver(), get_abi_tag()) accelerator = 'cu80' if path.exists('/opt/bin/nvidia-smi') else 'cpu' !pip install -q http://download.pytorch.org/whl/{accelerator}/torch-0.3.1-{platform}-linux_x86_64.whl fastai torchvision  This will take a while.\nSetup step 2: model weights download. # Model weights for other network architectures (e.g. resnext50): !wget -q http://files.fast.ai/models/weights.tgz \u0026amp;\u0026amp; tar -xzf weights.tgz -C /usr/local/lib/python3.6/dist-packages/fastai  The¬†step 2¬†will take a while too, need to download and unpack 1.1 Gb.\nSetup step 3: dataset download. For lesson 1, 2, 3 you need dogs $ cats dataset. This code does it.¬†The dataset dogs \u0026amp; cats is available at http://files.fast.ai/data/dogscats.zip.\n!mkdir -p data !wget -q http://files.fast.ai/data/dogscats.zip !unzip -q dogscats.zip -d data/  Some lessons as 2nd use Kaggle datasets, but it is a theme for another article.\nSummary of all my setup steps you can copy from my Github Gist¬†Fast.ai install script.py.\nI will try to keep it updated as long as I have interest in fast.ai and Google Colaboratory.\n","date":1535831362,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535831362,"objectID":"4a99f48a2e1a9f987df338e87e456d10","permalink":"https://denis-trofimov.github.io/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/","publishdate":"2018-09-01T19:49:22Z","relpermalink":"/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/","section":"post","summary":"Joining phenomenal deep learning course fast.ai using free Google Colaboratory setup. My colleague Ilia Lebedev¬†@melevir at twitter recommended me a cool deep learning course at¬†http://course.fast.ai.\n","tags":["colab","computer vision","course","deep learning","fastai","google","Google Colaboratory","GPU","Jupyter notebook","Kaggle","machine learning","pytorch"],"title":"Joining phenomenal machine learning course fast.ai using free Google Colaboratory setup.","type":"post"},{"authors":null,"categories":["learning"],"content":"In this post I speak about some basic¬†Javascript quesions and answers, which I have made passing throught course¬†JavaScript LaunchPad by Simple Programmer.com.\nI have interviewed 3 persons in the year 2017 for developer position to the company I work for, Vzor Systems LLC.\nIt turned out that to prepare for interview from the¬†interviewer side one should do some effort. If the company is not a big but a small startup, it is my job as¬†interviewer to think of questions and written tests to check a candidate`s skills and knowledge. One time I was looking for typical questions on interview for C++ developer position.\nHaving an¬†interviewer field of view in mind, I created this questions list when I have finished first¬†JavaScript LaunchPad¬†chapter \u0026#8220;Execution Contexts and Lexical Environments\u0026#8221;.\nThe Execution Context \u0026#8211; Creation \u0026amp; Hoisting Question: What this code give to the console? b(); console.log(a); var a = 'Hello World!'; function b() { console.log('Called b!'); }  Answer: Called b! Hello World!  Functions, Context, and Variable Environments Question: What this code give to the console? function b() { var myVar; console.log(myVar); } function a() { var myVar = 2; console.log(myVar); b(); } var myVar = 1; console.log(myVar); a(); console.log(myVar);  Answer: 1 2 1 1  The Scope Chain Question: What this code give to the console? function a() { function b() { console.log(myVar); } b(); } var myVar = 1; a(); b();  Answer: 1 Uncaught ReferenceError: b is not defined  What About Asynchronous Callbacks Question: What this code give to the console? // long running function function waitThreeSeconds() { var ms = 3000 + new Date().getTime(); while (new Date() \u0026lt; ms){} console.log('finished function'); } function clickHandler() { console.log('click event!'); } // listen for the click event document.addEventListener('click', clickHandler); waitThreeSeconds(); console.log('finished execution');  Answer: finished function finished execution click event! ","date":1529969373,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1529969373,"objectID":"790b8c7a6ea0e253311a895b4e3b9b66","permalink":"https://denis-trofimov.github.io/what-easy-questions-on-javascript-i-can-ask/","publishdate":"2018-06-25T23:29:33Z","relpermalink":"/what-easy-questions-on-javascript-i-can-ask/","section":"post","summary":"In this post I speak about some basic¬†Javascript quesions and answers, which I have made passing throught course¬†JavaScript LaunchPad by Simple Programmer.com.\nI have interviewed 3 persons in the year 2017 for developer position to the company I work for, Vzor Systems LLC.\nIt turned out that to prepare for interview from the¬†interviewer side one should do some effort. If the company is not a big but a small startup, it is my job as¬†interviewer to think of questions and written tests to check a candidate`s skills and knowledge. One time I was looking for typical questions on interview for C++ developer position.\nHaving an¬†interviewer field of view in mind, I created this questions list when I have finished first¬†JavaScript LaunchPad¬†chapter \u0026#8220;Execution Contexts and Lexical Environments\u0026#8221;.\n","tags":["course","interview","javascript","learning","questions"],"title":"What easy questions on Javascript I can ask?","type":"post"},{"authors":null,"categories":null,"content":" Python Courses Mentor Blog Terms and Conditions (\u0026#8220;Terms\u0026#8221;) Last updated: June 07, 2018\nPlease read these Terms and Conditions (\u0026#8220;Terms\u0026#8221;, \u0026#8220;Terms and Conditions\u0026#8221;) carefully before using the https://denis-trofimov.github.io website (the \u0026#8220;Service\u0026#8221;) operated by Python Courses Mentor Blog (\u0026#8220;us\u0026#8221;, \u0026#8220;we\u0026#8221;, or \u0026#8220;our\u0026#8221;).\nYour access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service.\nBy accessing or using the Service you agree to be bound by these Terms. If you disagree with any part of the terms then you may not access the Service. This Terms and Conditions agreement for Python Courses Mentor Blog is powered by TermsFeed.\nAccounts When you create an account with us, you must provide us information that is accurate, complete, and current at all times. Failure to do so constitutes a breach of the Terms, which may result in immediate termination of your account on our Service.\nYou are responsible for safeguarding the password that you use to access the Service and for any activities or actions under your password, whether your password is with our Service or a third-party service.\nYou agree not to disclose your password to any third party. You must notify us immediately upon becoming aware of any breach of security or unauthorized use of your account.\nLinks To Other Web Sites Our Service may contain links to third-party web sites or services that are not owned or controlled by Python Courses Mentor Blog.\nPython Courses Mentor Blog has no control over, and assumes no responsibility for, the content, privacy policies, or practices of any third party web sites or services. You further acknowledge and agree that Python Courses Mentor Blog shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with use of or reliance on any such content, goods or services available on or through any such web sites or services.\nWe strongly advise you to read the terms and conditions and privacy policies of any third-party web sites or services that you visit.\nTermination We may terminate or suspend access to our Service immediately, without prior notice or liability, for any reason whatsoever, including without limitation if you breach the Terms.\nAll provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.\nWe may terminate or suspend your account immediately, without prior notice or liability, for any reason whatsoever, including without limitation if you breach the Terms.\nUpon termination, your right to use the Service will immediately cease. If you wish to terminate your account, you may simply discontinue using the Service.\nAll provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.\nGoverning Law These Terms shall be governed and construed in accordance with the laws of Russian Federation, without regard to its conflict of law provisions.\nOur failure to enforce any right or provision of these Terms will not be considered a waiver of those rights. If any provision of these Terms is held to be invalid or unenforceable by a court, the remaining provisions of these Terms will remain in effect. These Terms constitute the entire agreement between us regarding our Service, and supersede and replace any prior agreements we might have between us regarding the Service.\nChanges We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a revision is material we will try to provide at least 15 days notice prior to any new terms taking effect. What constitutes a material change will be determined at our sole discretion.\nBy continuing to access or use our Service after those revisions become effective, you agree to be bound by the revised terms. If you do not agree to the new terms, please stop using the Service.\nContact Us If you have any questions about these Terms, please contact us.\n","date":1528394924,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1528394924,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://denis-trofimov.github.io/terms/","publishdate":"2018-06-07T18:08:44Z","relpermalink":"/terms/","section":"","summary":"Python Courses Mentor Blog Terms and Conditions (\u0026#8220;Terms\u0026#8221;) Last updated: June 07, 2018\nPlease read these Terms and Conditions (\u0026#8220;Terms\u0026#8221;, \u0026#8220;Terms and Conditions\u0026#8221;) carefully before using the https://denis-trofimov.github.io website (the \u0026#8220;Service\u0026#8221;) operated by Python Courses Mentor Blog (\u0026#8220;us\u0026#8221;, \u0026#8220;we\u0026#8221;, or \u0026#8220;our\u0026#8221;).\nYour access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service.","tags":null,"title":"Terms and Conditions","type":"page"},{"authors":null,"categories":null,"content":" Python Courses Mentor Blog Privacy Policy Effective date: June 07, 2018\nPython Courses Mentor Blog (\u0026#8220;us\u0026#8221;, \u0026#8220;we\u0026#8221;, or \u0026#8220;our\u0026#8221;) operates the https://denis-trofimov.github.io website (the \u0026#8220;Service\u0026#8221;).\nThis page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. This Privacy Policy for Python Courses Mentor Blog is powered by TermsFeed.\nWe use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, accessible from https://denis-trofimov.github.io\nInformation Collection And Use We collect several different types of information for various purposes to provide and improve our Service to you.\nTypes of Data Collected Personal Data While using our Service, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you (\u0026#8220;Personal Data\u0026#8221;). Personally identifiable information may include, but is not limited to:\nEmail address  First name and last name  Phone number  Address, State, Province, ZIP/Postal code, City  Cookies and Usage Data \nUsage Data We may also collect information how the Service is accessed and used (\u0026#8220;Usage Data\u0026#8221;). This Usage Data may include information such as your computer\u0026#8217;s Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that you visit, the time and date of your visit, the time spent on those pages, unique device identifiers and other diagnostic data.\nTracking \u0026amp; Cookies Data We use cookies and similar tracking technologies to track the activity on our Service and hold certain information.\nCookies are files with small amount of data which may include an anonymous unique identifier. Cookies are sent to your browser from a website and stored on your device. Tracking technologies also used are beacons, tags, and scripts to collect and track information and to improve and analyze our Service.\nYou can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Service.\nExamples of Cookies we use:\nSession Cookies.We use Session Cookies to operate our Service.  Preference Cookies.We use Preference Cookies to remember your preferences and various settings.  Security Cookies.We use Security Cookies for security purposes. \nUse of Data Python Courses Mentor Blog uses the collected data for various purposes:\nTo provide and maintain the Service  To notify you about changes to our Service  To allow you to participate in interactive features of our Service when you choose to do so  To provide customer care and support  To provide analysis or valuable information so that we can improve the Service  To monitor the usage of the Service  To detect, prevent and address technical issues \nTransfer Of Data Your information, including Personal Data, may be transferred to ‚Äî and maintained on ‚Äî computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.\nIf you are located outside Russian Federation and choose to provide information to us, please note that we transfer the data, including Personal Data, to Russian Federation and process it there.\nYour consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.\nPython Courses Mentor Blog will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.\nDisclosure Of Data Legal Requirements Python Courses Mentor Blog may disclose your Personal Data in the good faith belief that such action is necessary to:\nTo comply with a legal obligation  To protect and defend the rights or property of Python Courses Mentor Blog  To prevent or investigate possible wrongdoing in connection with the Service  To protect the personal safety of users of the Service or the public  To protect against legal liability \nSecurity Of Data The security of your data is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.\nService Providers We may employ third party companies and individuals to facilitate our Service (\u0026#8220;Service Providers\u0026#8221;), to provide the Service on our behalf, to perform Service-related services or to assist us in analyzing how our Service is used.\nThese third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.\nLinks To Other Sites Our Service may contain links to other sites that are not operated by us. If you click on a third party link, you will be directed to that third party\u0026#8217;s site. We strongly advise you to review the Privacy Policy of every site you visit.\nWe have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.\nChildren\u0026#8217;s Privacy Our Service does not address anyone under the age of 18 (\u0026#8220;Children\u0026#8221;).\nWe do not knowingly collect personally identifiable information from anyone under the age of 18. If you are a parent or guardian and you are aware that your Children has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from children without verification of parental consent, we take steps to remove that information from our servers.\nChanges To This Privacy Policy We may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page.\nWe will let you know via email and/or a prominent notice on our Service, prior to the change becoming effective and update the \u0026#8220;effective date\u0026#8221; at the top of this Privacy Policy.\nYou are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.\nContact Us If you have any questions about this Privacy Policy, please contact us:\n","date":1528394575,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1528394575,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://denis-trofimov.github.io/privacy/","publishdate":"2018-06-07T18:02:55Z","relpermalink":"/privacy/","section":"","summary":"Python Courses Mentor Blog Privacy Policy Effective date: June 07, 2018\nPython Courses Mentor Blog (\u0026#8220;us\u0026#8221;, \u0026#8220;we\u0026#8221;, or \u0026#8220;our\u0026#8221;) operates the https://denis-trofimov.github.io website (the \u0026#8220;Service\u0026#8221;).\nThis page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. This Privacy Policy for Python Courses Mentor Blog is powered by TermsFeed.\nWe use your data to provide and improve the Service.","tags":null,"title":"Privacy Policy","type":"page"},{"authors":null,"categories":["iris recognition"],"content":"I found this pretty good list of Iris Recognition open-source codes. I am really appreciate work of the first author, thanhkien84. I asked myself, how to¬†improve it? I have decided to add my value.\nI have checked all links and found replacements for stale links to projects OSIRIS, UND.\nIn the year 2003 there was only one iris recognition open source code from Libor Masek. His source code, written in Matlab, has been the baseline for generations of iris recognition coders. Recently there are a number of new open source codes come up. They are more mature and meet¬†state-of-the-art accuracy. I summarise them in a list here for your reference.\n   Iris recognition projects   Year/ Language  Approach  Performance (EER)     ICE 2005   MBGC portal   CASIA     Libor Masek [project]   2003,\n Matlab  Hough Circle + 1D Log-Gabor          OSIRIS 4.1 [project dead link]   2013,\n C++  Least square, Circle + 2D Gabor   1.09%        5455945/Iris_Osiris\n (OSIRIS 4.1 fork) Support OpenCV3.0+,OpenCV2.4.13  2017, C++   Same as OSIRIS 4.1          Python interface to OSIRIS Iris Segmentation and Recognition software (OSIRIS 4.1 fork)   2017, Python   Same as OSIRIS 4.1           VASIR 2.2 [project]   2013,\n C++  Circle + 2D Gabor   3.5%   13.9% best quality frame\n 30.6% all frames     NonidealIRIS [project]   2006,\n Matlab  Ellipse + 2D, Gabor          USIT\n [project]  2016,\n C++  Circle/Ellipse+\n 1D Log Gabor/  2D Gabor/  DCT/ SIFT/  SURF/LBP      0.82%    UND\n [project]  2016,\n Matlab  Circle,\n Crypts features  3.58%     1.39%    Iris segmentation only      IrisSeg [project]   2017,\n Matlab    ICB 2016  IrisSeg: A Fast and Robust Iris Segmentation Framework for Non-Ideal Iris Images    IAADseg\n [project]  2015,\n Matlab  Total-variation   ICCV 2015  An Accurate Iris Segmentation Framework under Relaxed Imaging Constraints using Total Variation Model    IrisSeg\n [project]  2015,\n Python  Geodesic Active Contours and GrabCut   PSIVT 2015  Iris Segmentation using Geodesic Active Contours and GrabCut     \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Iris datasets to consider:\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;Dataset\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt; Subset\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;Number of\u0026lt;/b\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;subjects\u0026lt;/b\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;Number of\u0026lt;/b\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;images\u0026lt;/b\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;Spectrum\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;Note\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td rowspan=\u0026quot;6\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA-Iris-Thousand\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;10,000\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;20,000\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;NIR\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA-Iris-Interval\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Time lapse\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA-Iris-Lamp\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA-Iris-Twins\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;100\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Twin\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA-Iris-Distance\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;At a distance\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;CASIA-Iris-Syn\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;1000\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;10,000\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Synthesis\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td rowspan=\u0026quot;6\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;ND\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;ND-IRIS-0405\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;356\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;64,980\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;NIR\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;ND-GFI\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Gender\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;NDCLD15\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;750 males\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;750 females\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;3000\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;NIR\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Contact Lens\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;ND-CrossSensor-Iris-2013\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;676\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;29,986 from LG4000 and 116,564 from LG2200\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;NIR\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Cross Sensor\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;ND-TimeLapseIris-2012\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;23\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;6797\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Time lapse 2004 to 2008\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;ND-Iris-Template-Aging-2008-2010\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;11,776\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Time lapse 2008 to 2010\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;MBGC\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;NIR \u0026amp; NIR videos\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;One the move\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;UBIRIS\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;261\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;11,102\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Visible\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;On the move\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;At a distance\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;My sources:\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;https://kiennguyenstuff.wordpress.com/2016/07/14/iris-recognition-open-source-codes/\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;Iris Recognition open-source codes\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;https://www.quora.com/What-are-some-of-the-best-open-source-iris-recognition-libraries-available\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-weight: 400;\u0026quot;\u0026gt;What are some of the best open source iris recognition libraries available?\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; \u0026lt;em\u0026gt;Eye Photo by Tom Tolkien \u0026lt;a href=\u0026quot;http://thomastolkien.wordpress.com/\u0026quot;\u0026gt;http://thomastolkien.wordpress.com/\u0026lt;/a\u0026gt;\u0026lt;/em\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; ","date":1528317230,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1528317230,"objectID":"dc08f0581140e6dd49be14ab05f84b59","permalink":"https://denis-trofimov.github.io/10-known-open-source-projects-in-iris-recognition-2018/","publishdate":"2018-06-06T20:33:50Z","relpermalink":"/10-known-open-source-projects-in-iris-recognition-2018/","section":"post","summary":"I found this pretty good list of Iris Recognition open-source codes. I am really appreciate work of the first author, thanhkien84. I asked myself, how to¬†improve it? I have decided to add my value.\nI have checked all links and found replacements for stale links to projects OSIRIS, UND.\nIn the year 2003 there was only one iris recognition open source code from Libor Masek. His source code, written in Matlab, has been the baseline for generations of iris recognition coders. Recently there are a number of new open source codes come up. They are more mature and meet¬†state-of-the-art accuracy. I summarise them in a list here for your reference.\n","tags":["c++","code","dataset","iris recognition","iris segmentation","matlab","open source","project","python"],"title":"10 Known Open Source Projects in Iris Recognition 2018","type":"post"},{"authors":null,"categories":["machine learning"],"content":"First of all I would like to thank one person¬†for reasoning me to start a developer blog. This person is¬†John Sonmez, the author of the email course¬†on creating a blog that boosts your career \u0026#8220;How to Create a Blog That BOOSTS Your Career\u0026#8221; and the founder of the Simple Programmer.\nIn this blog I plan to teach my reader step by step how to tackle tasks of the machine learnig in the computer vision using Python tools. I would like to show how a reader can start using former buzzwords like machine learnig, neural networks, computer vision, as a corresponding tools, Caffe package, TensorFlow, OpenCV. I know it is challeging to describe a complex notions ia a simple words, but I will try my best.\nQ:¬†Why do I belive that my expertise can be valuable?\nA:¬†In the company I am working since 2017 our team is solving problems like a face image segmentation, an eye¬†image segmentation, an eye iris feature detection and encoding.\n","date":1525643346,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1525643346,"objectID":"9ce96d6b7eef36397829a0419f360f9d","permalink":"https://denis-trofimov.github.io/foreword-from-author/","publishdate":"2018-05-06T21:49:06Z","relpermalink":"/foreword-from-author/","section":"post","summary":"First of all I would like to thank one person¬†for reasoning me to start a developer blog. This person is¬†John Sonmez, the author of the email course¬†on creating a blog that boosts your career \u0026#8220;How to Create a Blog That BOOSTS Your Career\u0026#8221; and the founder of the Simple Programmer.\nIn this blog I plan to teach my reader step by step how to tackle tasks of the machine learnig in the computer vision using Python tools.","tags":["blog","computer vision","developer","plan","python"],"title":"A foreword from the author.","type":"post"}]