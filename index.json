[{"authors":null,"categories":null,"content":" I am a Go/Python/C++/C software engineer and working in software development since 2010. For the last 3 years I did Platform Engineering, the development of the Internal Developer Portal (IDP), and making organizations shift left on the DevOps paradigm. In the past I’ve designed and developed standalone and client-server applications, with databases like Oracle DB, PostgreSQL, and MySQL. Created applications serving CRM, web automated order processing, and simulation of the technological operation of railroad rolling stock. ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a Go/Python/C++/C software engineer and working in software development since 2010. For the last 3 years I did Platform Engineering, the development of the Internal Developer Portal (IDP), and making organizations shift left on the DevOps paradigm.","tags":null,"title":"Denis Trofimov","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://denis-trofimov.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":["python","tutor","education","project"],"content":"Yandex Practicum educational platform\nOur courses are created using knowledge that you won’t find in any textbook. With our intensive 6 to 9-month IT career advancement programs, Practicum by Yandex bridges the gap between short-term online courses and full-time internships.\nReviewed homework coding practice tasks. ","date":15768e5,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":15768e5,"objectID":"770a82f3a50ba341e347d5a059c0a4c8","permalink":"https://denis-trofimov.github.io/project/python-backend-tutor-practicum-yandex/","publishdate":"2019-12-20T00:00:00Z","relpermalink":"/project/python-backend-tutor-practicum-yandex/","section":"project","summary":"Tutored Python course for web backend developers","tags":["python","django","postresql","celery","redis","uwsgi","docker","nginx","jinja2","web"],"title":"Python Backend Tutor for Practicum Yandex","type":"project"},{"authors":[],"categories":["python","tutor","education","project"],"content":" Tutored a course on Python for Big Data Analysis Created a 20 weeks course program and held class room studies Assigned and checked a homework exercises HackerU educational programs are designed for an audience of different levels of training: from beginner specialists to top management. Actual curricula, international level teachers and practice in the learning process are the best investments in education.\nHackerU - Israeli Higher School of Information Technology and Security\n","date":1576540800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576540800,"objectID":"26b909edbf09d7d2d5fe77d92879da9e","permalink":"https://denis-trofimov.github.io/project/python-big-data-tutor-hackeru/","publishdate":"2019-12-17T00:00:00Z","relpermalink":"/project/python-big-data-tutor-hackeru/","section":"project","summary":"Tutored an intro course on Python for Big Data Analysis","tags":["python","django","postresql","celery","redis","jinja2","web","telegram","API","flask","sqlalchemy","scraping","development","pandas","data analysis"],"title":"Python Big Data Tutor for HackerU","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://denis-trofimov.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":[],"categories":["full stack","python","project"],"content":" I had developed the Django powered SPA site for “New Year’s Miracle”. Team consisted of owner, sysadmin, DBA, designer, me, my mentee junior Python developer. I used Jinja 2 templates to install front-end, for storage on site I used PostreSQL DB 10, for delayed tasks as email and SMS sending – Celery queue and Redis. I created a Docker container with UWSGI and Django for deployment on Nginx web server, and tested this container works on 38 core bare metal configuration. Screenshot of call order received Screenshot of Django admin view Service description below I took from Russian resource for parents www.ya-roditel.ru direct link\nIt is Google translated to English.\nAs part of the “New Year’s Miracle” project, a unique service of free personalized phone call from Santa Claus began its work. Previously, parents can choose not only a name, but also an individual instruction to the child from Santa Claus.\n“Hot lines” of Santa Claus have been working for more than a year, but, as a rule, they mean receiving incoming calls and playing out non-personalized greetings. For the first time in history, the new service will allow you to receive a personalized call from the main New Year wizard. Having picked up the phone, the child will hear his name 5 times, and if at the same time he needs to be more attentive to his studies or not to refuse vegetables at dinner, Grandfather will definitely say so in his congratulation. Parents choose a convenient date and time for the call on their own - the coveted call can be heard at least five minutes after the application has been left.\nIn addition, if the child has a brother or sister, congratulations will be addressed to both of them. A one-time congratulation is also provided for three children.\nThe project manager Maxim Shuvaev noted that over the last 7 days of December it is planned to make up to a million calls, but so far only in Russia. In the future, it is planned to connect to the shares of other CIS countries.\n","date":1546369465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546369465,"objectID":"27db4e82992c46fb98dc56b86c55b391","permalink":"https://denis-trofimov.github.io/project/django-personalized-happy-new-year-greetings-call-order/","publishdate":"2019-01-01T22:04:25+03:00","relpermalink":"/project/django-personalized-happy-new-year-greetings-call-order/","section":"project","summary":"A Django site built from scratch","tags":["python","django","postresql","celery","redis","uwsgi","docker","nginx","jinja2","web"],"title":"New Year's Miracle","type":"project"},{"authors":null,"categories":["networking"],"content":"Yes, the Moscow Python Conf++ 2018 conference was awesome. Started so many acquaintances with the pythonists who make impact in the software world! I got into picture at the stand of Moscow.Python on 1:50.\nI will come to the next one too!\nMixed russian and english content, you are welcome to watch!\n","date":1542051090,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542051090,"objectID":"5a4615317582dcd039faf649cbe5b037","permalink":"https://denis-trofimov.github.io/moscow-python-conf-2018-video/","publishdate":"2018-11-12T19:31:30Z","relpermalink":"/moscow-python-conf-2018-video/","section":"post","summary":"Yes, the Moscow Python Conf++ 2018 conference was awesome. Started so many acquaintances with the pythonists who make impact in the software world! I got into picture at the stand of Moscow.","tags":["conference","developer","python","soft skills"],"title":"Moscow Python Conf++ 2018 video report.","type":"post"},{"authors":null,"categories":["learning"],"content":" This post describes how dictionaries are implemented in the Python language. This article is actually a repost of originally posted at Laurent Luce’s Blog August 29, 2011 by Laurent Luce. I mentor several students of russian Learn Python courses. They have questions about structures in Python and how to use them. I found this post a good help to me and possibly to my students. Dictionaries are indexed by keys and they can be seen as associative arrays. Let’s add 3 key/value pairs to a dictionary:\n\u0026gt;\u0026gt;\u0026gt; d = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} \u0026gt;\u0026gt;\u0026gt; d[\u0026#39;c\u0026#39;] = 3 \u0026gt;\u0026gt;\u0026gt; d {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2, \u0026#39;c\u0026#39;: 3} The values can be accessed this way:\n\u0026gt;\u0026gt;\u0026gt; d[\u0026#39;a\u0026#39;] 1 \u0026gt;\u0026gt;\u0026gt; d[\u0026#39;b\u0026#39;] 2 \u0026gt;\u0026gt;\u0026gt; d[\u0026#39;c\u0026#39;] 3 \u0026gt;\u0026gt;\u0026gt; d[\u0026#39;d\u0026#39;] Traceback (most recent call last): File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; KeyError: \u0026#39;d\u0026#39; The key ‘d’ does not exist so a KeyError exception is raised.\nHash tables Python dictionaries are implemented using hash tables. It is an array whose indexes are obtained using a hash function on the keys. The goal of a hash function is to distribute the keys evenly in the array. A good hash function minimizes the number of collisions e.g. different keys having the same hash. Python does not have this kind of hash function. Its most important hash functions (for strings and ints) are very regular in common cases:\n\u0026gt;\u0026gt;\u0026gt; map(hash, (0, 1, 2, 3)) [0, 1, 2, 3] \u0026gt;\u0026gt;\u0026gt; map(hash, (\u0026#34;namea\u0026#34;, \u0026#34;nameb\u0026#34;, \u0026#34;namec\u0026#34;, \u0026#34;named\u0026#34;)) [-1658398457, -1658398460, -1658398459, -1658398462] We are going to assume that we are using strings as keys for the rest of this post. The hash function for strings in Python is defined as:\narguments: string object returns: hash function string_hash: if hash cached: return it set len to string\u0026#39;s length initialize var p pointing to 1st char of string object set x to value pointed by p left shifted by 7 bits while len \u0026gt;= 0: set var x to (1000003 * x) xor value pointed by p increment pointer p set x to x xor length of string object cache x as the hash so we don\u0026#39;t need to calculate it again return x as the hash If you run hash(‘a’) in Python, it will execute string_hash() and return 12416037344. Here we assume we are using a 64-bit machine.\nIf an array of size x is used to store the key/value pairs then we use a mask equal to x-1 to calculate the slot index of the pair in the array. This makes the computation of the slot index fast. The probability to find an empty slot is high due to the resizing mechanism described below. This means that having a simple computation makes sense in most of the cases. If the size of the array is 8, the index for ‘a’ will be: hash(‘a’) \u0026amp; 7 = 0. The index for ‘b’ is 3, the index for ‘c’ is 2, the index for ‘z’ is 3 which is the same as ‘b’, here we have a collision.\nWe can see that the Python hash function does a good job when the keys are consecutive which is good because it is quite common to have this type of data to work with. However, once we add the key ‘z’, there is a collision because it is not consecutive enough. We could use a linked list to store the pairs having the same hash but it would increase the lookup time e.g. not O(1) average anymore. The next section describes the collision resolution method used in the case of Python dictionaries. Open addressing Open addressing is a method of collision resolution where probing is used. In case of ‘z’, the slot index 3 is already used in the array so we need to probe for a different index to find one which is not already used. Adding a key/value pair will average O(1) and the lookup operation too. A quadratic probing sequence is used to find a free slot. The code is the following: j = (5*j) + 1 + perturb; perturb \u0026gt;\u0026gt;= PERTURB_SHIFT; use j % 2**i as the next table index; Recurring on 5*j+1 quickly magnifies small differences in the bits that didn’t affect the initial index. The variable “perturb” gets the other bits of the hash code into play. Just out of curiosity, let’s look at the probing sequence when the table size is 32 and j = 3.\n3 -\u0026gt; 11 -\u0026gt; 19 -\u0026gt; 29 -\u0026gt; 5 -\u0026gt; 6 -\u0026gt; 16 -\u0026gt; 31 -\u0026gt; 28 -\u0026gt; 13 -\u0026gt; 2… You can read more about this probing sequence by looking at the source code of dictobject.c. A detailed explanation of the probing mechanism can be found at the top of the file. Now, let’s look at the Python internal code along with an example. Dictionary C structures The following C structure is used to store a dictionary entry: key/value pair. The hash, key and value are stored. PyObject is the base class of the Python objects. typedef struct { Py_ssize_t me_hash; PyObject *me_key; PyObject *me_value; } PyDictEntry; The following structure represents a dictionary. ma_fill is the number of used slots + dummy slots. A slot is marked dummy when a key pair is removed. ma_used is the number of used slots (active). ma_mask is equal to the array’s size minus 1 and is used to calculate the slot index. ma_table is the array and ma_smalltable is the initial array of size 8. typedef struct _dictobject PyDictObject; struct _dictobject { PyObject_HEAD Py_ssize_t ma_fill; Py_ssize_t ma_used; Py_ssize_t ma_mask; …","date":1538161978,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538161978,"objectID":"d5fe5ae0f21fcd5cf5a2ef8eaf2a650b","permalink":"https://denis-trofimov.github.io/how-dictionaries-are-implemented-in-the-python-language/","publishdate":"2018-09-28T19:12:58Z","relpermalink":"/how-dictionaries-are-implemented-in-the-python-language/","section":"post","summary":" This post describes how dictionaries are implemented in the Python language. This article is actually a repost of originally posted at Laurent Luce’s Blog August 29, 2011 by Laurent Luce. I mentor several students of russian Learn Python courses. They have questions about structures in Python and how to use them. I found this post a good help to me and possibly to my students. ","tags":["algorithms","code","data structures","interview","programming","python"],"title":"How dictionaries are implemented in the Python language","type":"post"},{"authors":null,"categories":["team lead"],"content":"Repost of https://simpleprogrammer.com/mob-programming/.\nThis piece was a collaboration written by Nate Wixom and Torrey Powell. Mob programming is the best approach for many development applications. Mob projects result in a more finished project at release, with fewer bugs. By focusing on one project at a time, teams can complete projects more efficiently, and those projects are higher quality, requiring fewer revisions.\nThe Project Management Institute’s 2017 Pulse of the Profession survey reports that 71 percent of organizations now use agile methods to complete projects. Included among agile approaches is mob programming, defined by the Agile Alliance as “a software development approach where the whole team works on the same thing, at the same time, in the same space, and at the same computer.” Picture multiple engineers at one station working collaboratively on one project.\nWhile many organizations have adopted mob programming as a core part of their development skill set, not all development organizations have bought in.\nStill, to implement mob programming successfully, you need buy-in from two important groups at your organization—the executive team and the programmers themselves.\nBy following the strategies below, you can get organization buy-in for mob programming from top to bottom and start using this agile development methodology to provide superior finished products for clients both inside and outside your organization.\nGetting Buy-in From Leadership As far back as 2000, the benefits of developers teaming up on projects to solve problems have been evaluated against the performance of individuals. An oft-cited joint study between the University of North Carolina and the University of Utah showed that paired programmers were 15 percent more successful in solving problems and that their solutions did so with fewer lines of code.\nThat may not be an impressive enough statistic for senior leadership, however. Shouldn’t it be at least 100 percent more efficient in order to be cost-effective?\nThe truth of the matter is that such small efficiency gains in the short run may not be convincing. It’s a long game, and you’ll need to open leadership’s eyes to the possibilities of multiple projects spanning months, even years.\nIf you can get leadership to agree to a six- to 12-month trial for mob programming, here are some of the benefits your organization will see:\nFully inventoried projects: With groups working more thoroughly and quickly on fewer projects, projects are less likely to be abandoned or forgotten, and more projects are fully completed. More eyes on every project means projects are more complete when they are released to the world. Shorter turnaround on projects: Projects are completed quicker than when worked on by individual developers. With more eyes on each project, roadblocks are more easily overcome, and solutions to problems can quickly be brainstormed. Fewer issues in live projects: As the projects are fully inventoried with more people reviewing every line of code, fewer bugs make it to the production environment. With individual developers working on projects, it’s often understood that there will be bugs that need to be fixed while a platform is live. You can eliminate a lot of this necessary rework through mob programming. Quicker onboarding for programmers: Onboarding into a mob programming environment is more efficient, as you can drop new developers right into a mob that’s already at work on a project and get them contributing immediately rather than having to divert resources for training and management of new programmers’ early projects with your organization. Over time, mob programming improves efficiency not only in the completion of successful projects but also in the integration of new team members. You may not see the return on investment right away, but over time, it will be evident.\nBetter results, faster, with fewer abandoned projects—that’s something any senior leader can get behind.\nGetting Buy-in From Programmers, Developers, and Engineers Getting buy-in from senior leadership is one thing. Getting buy-in from the people who will actually be doing the mob programming is something else entirely. Many engineers, developers, and programmers are used to working alone—putting on the headphones and sitting down to crank out code, cut off from the outside world, for hours at a time. How do you get people who are used to working alone to be active participants in a group environment where the major reason for increased success is teamwork?\nIn our experience, having gone through many iterations of mob programming while integrating it into the organization at Clearlink, not everyone is a good fit for mob programming—but many more than you would expect actually are, once they are involved.\nWhy is that? Believe it or not, engineers like socializing with their colleagues, they just haven’t always had the chance to do so. Once they realize the level of engagement and the quality …","date":1536963470,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536963470,"objectID":"ff2998bb2b6419749b7567cc7abcb13d","permalink":"https://denis-trofimov.github.io/getting-mob-programming-buy-in-at-your-organization/","publishdate":"2018-09-14T22:17:50Z","relpermalink":"/getting-mob-programming-buy-in-at-your-organization/","section":"post","summary":"Repost of https://simpleprogrammer.com/mob-programming/.\nThis piece was a collaboration written by Nate Wixom and Torrey Powell. Mob programming is the best approach for many development applications. Mob projects result in a more finished project at release, with fewer bugs. By focusing on one project at a time, teams can complete projects more efficiently, and those projects are higher quality, requiring fewer revisions.\n","tags":["agile","effectiveness","leadership","programming","soft skills","team work"],"title":"Getting Mob Programming Buy-In at Your Organization","type":"post"},{"authors":null,"categories":["learning"],"content":"I watched this video from the start till the end. I see this coding habits very often. I fought unsustainable spacing the wrong way in the past.\nKevlin Henney`s talk video description Habits help you manage the code complexity. You apply existing skill and knowledge automatically to the detail while focusing on the bigger picture.\nBut because you acquire habits largely by imitation, and rarely question them, how do you know your habits are effective? Many of the habits that programmers have for naming, formatting, commenting and unit testing do not stand up as rational and practical on closer inspection. Kevlin Henney @kevlinhenney examines seven coding habits that are not as effective as programmers believe, and to suggest alternatives.\nSeven Ineffective Coding Habits of Many Programmers noise code\nunsustainable spacing\nlego naming\nunderabstraction\nunencapsulated state\ngetters and setters\nuncohesive tests\nScreenshots Source ","date":1536523400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536523400,"objectID":"e5cd27a3a64701b7cd61c70d1cdc8077","permalink":"https://denis-trofimov.github.io/review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/","publishdate":"2018-09-09T20:03:20Z","relpermalink":"/review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/","section":"post","summary":"I watched this video from the start till the end. I see this coding habits very often. I fought unsustainable spacing the wrong way in the past.\n","tags":["developer","effectiveness","learning","programming","style"],"title":"Review of Kevlin Henney`s talk Seven Ineffective Coding Habits of Many Programmers","type":"post"},{"authors":[],"categories":["python","tutor","education","project"],"content":"Learn Python programming course\nPYTHON PROGRAMMING COURSE FOR ANY LEVEL WITH ACCESS TO PRACTICE\nAchivements: Tutored into Python course for 10 weeks, 40 hours total, participated in 4 waves total. Supervised 21 students working on their diploma projects. Assigned and checked a homework exercises. ","date":1536364800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536364800,"objectID":"88f549198eb0792707b7bf409e56356d","permalink":"https://denis-trofimov.github.io/project/python-tutor-learn-python/","publishdate":"2018-09-08T00:00:00Z","relpermalink":"/project/python-tutor-learn-python/","section":"project","summary":"Tutored an intro course on Python for web developers","tags":["python","django","postresql","celery","redis","jinja2","web","telegram","API","flask","sqlalchemy","scraping","development","pandas","data analysis"],"title":"Python Tutor for Learn Python","type":"project"},{"authors":null,"categories":["learning"],"content":"Hello!\nI got fresh new article from The Simple Programmer blog, Lessons Learned by Mentoring Programmers .\nIt is a good coincidence, for me it is the right time to get to know about mentoring.\nI will take part the learn.python.ru course in Moscow as a new curator for a group of 5-6 students. I am totally new to all this field, teaching programming. I am to help students to get well with Python language, answer questions, check they homework, help to plan they project. That course will be 10 weeks long.\nI urge you to read Ryan`s post. It covers the topics:\nGet well with mentor imposter syndrome.\nEncourage your mentee work because they need it.\nIf the concept is good not nitpick the form.\nYour Way Isn’t Always the Only Way.\nYou Are Not Wasting Their Time.\nUse Questions to Collaborate\nThanks to author Ryan Palo! Please keep on writing and sharing!\nPair programming photo CC 2.0 Kang-min Liu https://www.flickr.com/photos/gugod/ ","date":1536168526,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536168526,"objectID":"0ae06b4ef41e0f88acafd2817636eea0","permalink":"https://denis-trofimov.github.io/lessons-learned-by-mentoring-programmers-repost/","publishdate":"2018-09-05T17:28:46Z","relpermalink":"/lessons-learned-by-mentoring-programmers-repost/","section":"post","summary":"Hello!\nI got fresh new article from The Simple Programmer blog, Lessons Learned by Mentoring Programmers .\nIt is a good coincidence, for me it is the right time to get to know about mentoring.","tags":["learning","mentoring","python","repost","soft skills"],"title":"Lessons Learned by Mentoring Programmers repost.","type":"post"},{"authors":null,"categories":["machine learning"],"content":"Joining phenomenal deep learning course fast.ai using free Google Colaboratory setup. My colleague Ilia Lebedev @melevir at twitter recommended me a cool deep learning course at http://course.fast.ai.\nMuch appreciation to Jeremy and Rachel who gave us this opportunity to learn. They position themself as a course for software developers, not data scientists. This course is of January 2018, is the second version.\nListen that the course said for itself.\nYOU WILL LEARN HOW TO: New Set up your own GPU server in the cloud Use the fastai and Pytorch libraries in python to train and run deep learning models Build, debug, and visualize a state of the art convolutional neural network (CNN) for recognizing images Build state of the art recommendation systems using neural-network based collaborative filtering Build state of the art time series and structured data models using categorical embeddings Get great results even from small datasets, by using transfer learning Understand the components of a neural network, including activation functions, dense and convolutional layers, and optimizers Build, debug, and visualize a recurrent neural network (RNN) for natural language processing (NLP), including developing a sentiment classifier which beat all previous academic benchmarks. Recognize and deal with over-fitting, by using data augmentation, dropout, batch normalization, and similar techniques Back to a setup for fast.ai course using free Google Colaboratory. In this post, I will show how to use organize setup of Google Colaboratory for the fast.ai deep learning course. You should repeat this simple steps every time you connect to a new GPU.\nIn order to train a neural network, we will most certainly need Graphics Processing Unit (GPU) – and not everyone have a fast one. Without a decent GPU a singe step will last for hours instead of minutes. Sign-up to Google Colaboratory to get a hosted Jupyter notebook environment connected with a free Tesla K80 GPU.\nYou can use GPU as a backend free for 12 hours at a time. That is very good news for us!\nThe steps to repeat every time you connect to a new GPU. Setup step 0: Select Free GPU It is so simple to alter default hardware (CPU to GPU or vice versa); just follow Edit \u0026gt; Notebook settings or Runtime\u0026gt;Change runtime type and select GPU as Hardware accelerator. Open Jupyter notebook settings of Google Colaboratory Select a free Tesla K80 GPU in Jupyter notebook settings of Google Colaboratory Setup step 1: install libraries for fast.ai course. Enter this code in a new code block on top of a notebook:\n# Install torch compatible with fastai from os import path from wheel.pep425tags import get_abbr_impl, get_impl_ver, get_abi_tag platform = \u0026#39;{}{}-{}\u0026#39;.format(get_abbr_impl(), get_impl_ver(), get_abi_tag()) accelerator = \u0026#39;cu80\u0026#39; if path.exists(\u0026#39;/opt/bin/nvidia-smi\u0026#39;) else \u0026#39;cpu\u0026#39; !pip install -q http://download.pytorch.org/whl/{accelerator}/torch-0.3.1-{platform}-linux_x86_64.whl fastai torchvision This will take a while.\nSetup step 2: model weights download. # Model weights for other network architectures (e.g. resnext50): !wget -q http://files.fast.ai/models/weights.tgz \u0026amp;\u0026amp; tar -xzf weights.tgz -C /usr/local/lib/python3.6/dist-packages/fastai The step 2 will take a while too, need to download and unpack 1.1 Gb.\nSetup step 3: dataset download. For lesson 1, 2, 3 you need dogs $ cats dataset. This code does it. The dataset dogs \u0026amp; cats is available at http://files.fast.ai/data/dogscats.zip.\n!mkdir -p data !wget -q http://files.fast.ai/data/dogscats.zip !unzip -q dogscats.zip -d data/ Some lessons as 2nd use Kaggle datasets, but it is a theme for another article.\nSummary of all my setup steps you can copy from my Github Gist Fast.ai install script.py.\nI will try to keep it updated as long as I have interest in fast.ai and Google Colaboratory.\n","date":1535831362,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535831362,"objectID":"4a99f48a2e1a9f987df338e87e456d10","permalink":"https://denis-trofimov.github.io/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/","publishdate":"2018-09-01T19:49:22Z","relpermalink":"/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/","section":"post","summary":"Joining phenomenal deep learning course fast.ai using free Google Colaboratory setup. My colleague Ilia Lebedev @melevir at twitter recommended me a cool deep learning course at http://course.fast.ai.\n","tags":["colab","computer vision","course","deep learning","fastai","google","google colaboratory","gpu","jupyter notebook","kaggle","machine learning","pytorch"],"title":"Joining phenomenal machine learning course fast.ai using free Google Colaboratory setup.","type":"post"},{"authors":null,"categories":["learning"],"content":"In this post I speak about some basic Javascript quesions and answers, which I have made passing throught course JavaScript LaunchPad by Simple Programmer.com.\nI have interviewed 3 persons in the year 2017 for developer position to the company I work for, Vzor Systems LLC.\nIt turned out that to prepare for interview from the interviewer side one should do some effort. If the company is not a big but a small startup, it is my job as interviewer to think of questions and written tests to check a candidate`s skills and knowledge. One time I was looking for typical questions on interview for C++ developer position.\nHaving an interviewer field of view in mind, I created this questions list when I have finished first **JavaScript LaunchPad **chapter “Execution Contexts and Lexical Environments”.\nThe Execution Context – Creation \u0026amp; Hoisting Question: What this code give to the console? b(); console.log(a); var a = \u0026#39;Hello World!\u0026#39;; function b() { console.log(\u0026#39;Called b!\u0026#39;); } Answer: Called b! Hello World! Functions, Context, and Variable Environments Question: What this code give to the console? function b() { var myVar; console.log(myVar); } function a() { var myVar = 2; console.log(myVar); b(); } var myVar = 1; console.log(myVar); a(); console.log(myVar); Answer: 1 2 1 1 The Scope Chain Question: What this code give to the console? function a() { function b() { console.log(myVar); } b(); } var myVar = 1; a(); b(); Answer: 1 Uncaught ReferenceError: b is not defined What About Asynchronous Callbacks Question: What this code give to the console? // long running function function waitThreeSeconds() { var ms = 3000 + new Date().getTime(); while (new Date() \u0026lt; ms){} console.log(\u0026#39;finished function\u0026#39;); } function clickHandler() { console.log(\u0026#39;click event!\u0026#39;); } // listen for the click event document.addEventListener(\u0026#39;click\u0026#39;, clickHandler); waitThreeSeconds(); console.log(\u0026#39;finished execution\u0026#39;); Answer: finished function finished execution click event! ","date":1529969373,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1529969373,"objectID":"790b8c7a6ea0e253311a895b4e3b9b66","permalink":"https://denis-trofimov.github.io/what-easy-questions-on-javascript-i-can-ask/","publishdate":"2018-06-25T23:29:33Z","relpermalink":"/what-easy-questions-on-javascript-i-can-ask/","section":"post","summary":"In this post I speak about some basic Javascript quesions and answers, which I have made passing throught course JavaScript LaunchPad by Simple Programmer.com.\nI have interviewed 3 persons in the year 2017 for developer position to the company I work for, Vzor Systems LLC.\nIt turned out that to prepare for interview from the interviewer side one should do some effort. If the company is not a big but a small startup, it is my job as interviewer to think of questions and written tests to check a candidate`s skills and knowledge. One time I was looking for typical questions on interview for C++ developer position.\nHaving an interviewer field of view in mind, I created this questions list when I have finished first **JavaScript LaunchPad **chapter “Execution Contexts and Lexical Environments”.\n","tags":["course","interview","javascript","learning","questions"],"title":"What easy questions on Javascript I can ask?","type":"post"},{"authors":null,"categories":null,"content":"Last updated: June 07, 2018\nPlease read these Terms and Conditions (“Terms”, “Terms and Conditions”) carefully before using the https://denis-trofimov.github.io website (the “Service”) operated by Denis Trofimov’s Blog (“us”, “we”, or “our”).\nYour access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service.\nBy accessing or using the Service you agree to be bound by these Terms. If you disagree with any part of the terms then you may not access the Service. This Terms and Conditions agreement for Denis Trofimov’s Blog is powered by TermsFeed.\nAccounts When you create an account with us, you must provide us information that is accurate, complete, and current at all times. Failure to do so constitutes a breach of the Terms, which may result in immediate termination of your account on our Service.\nYou are responsible for safeguarding the password that you use to access the Service and for any activities or actions under your password, whether your password is with our Service or a third-party service.\nYou agree not to disclose your password to any third party. You must notify us immediately upon becoming aware of any breach of security or unauthorized use of your account.\nLinks To Other Web Sites Our Service may contain links to third-party web sites or services that are not owned or controlled by Denis Trofimov’s Blog.\nDenis Trofimov’s Blog has no control over, and assumes no responsibility for, the content, privacy policies, or practices of any third party web sites or services. You further acknowledge and agree that Denis Trofimov’s Blog shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with use of or reliance on any such content, goods or services available on or through any such web sites or services.\nWe strongly advise you to read the terms and conditions and privacy policies of any third-party web sites or services that you visit.\nTermination We may terminate or suspend access to our Service immediately, without prior notice or liability, for any reason whatsoever, including without limitation if you breach the Terms.\nAll provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.\nWe may terminate or suspend your account immediately, without prior notice or liability, for any reason whatsoever, including without limitation if you breach the Terms.\nUpon termination, your right to use the Service will immediately cease. If you wish to terminate your account, you may simply discontinue using the Service.\nAll provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.\nGoverning Law These Terms shall be governed and construed in accordance with the laws of Russian Federation, without regard to its conflict of law provisions.\nOur failure to enforce any right or provision of these Terms will not be considered a waiver of those rights. If any provision of these Terms is held to be invalid or unenforceable by a court, the remaining provisions of these Terms will remain in effect. These Terms constitute the entire agreement between us regarding our Service, and supersede and replace any prior agreements we might have between us regarding the Service.\nChanges We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a revision is material we will try to provide at least 15 days notice prior to any new terms taking effect. What constitutes a material change will be determined at our sole discretion.\nBy continuing to access or use our Service after those revisions become effective, you agree to be bound by the revised terms. If you do not agree to the new terms, please stop using the Service.\nContact Us If you have any questions about these Terms, please contact us.\n","date":1528394924,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1528394924,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://denis-trofimov.github.io/terms/","publishdate":"2018-06-07T18:08:44Z","relpermalink":"/terms/","section":"","summary":"Last updated: June 07, 2018\nPlease read these Terms and Conditions (“Terms”, “Terms and Conditions”) carefully before using the https://denis-trofimov.github.io website (the “Service”) operated by Denis Trofimov’s Blog (“us”, “we”, or “our”).","tags":null,"title":"Terms and Conditions","type":"page"},{"authors":null,"categories":null,"content":"Effective date: June 07, 2018\nDenis Trofimov’s Blog (“us”, “we”, or “our”) operates the https://denis-trofimov.github.io website (the “Service”).\nThis page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. This Privacy Policy for Denis Trofimov’s Blog is powered by TermsFeed.\nWe use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, accessible from https://denis-trofimov.github.io\nInformation Collection And Use We collect several different types of information for various purposes to provide and improve our Service to you.\nTypes of Data Collected Personal Data While using our Service, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you (“Personal Data”). Personally identifiable information may include, but is not limited to:\nEmail address First name and last name Phone number Address, State, Province, ZIP/Postal code, City Cookies and Usage Data Usage Data We may also collect information how the Service is accessed and used (“Usage Data”). This Usage Data may include information such as your computer’s Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that you visit, the time and date of your visit, the time spent on those pages, unique device identifiers and other diagnostic data.\nTracking \u0026amp; Cookies Data We use cookies and similar tracking technologies to track the activity on our Service and hold certain information.\nCookies are files with small amount of data which may include an anonymous unique identifier. Cookies are sent to your browser from a website and stored on your device. Tracking technologies also used are beacons, tags, and scripts to collect and track information and to improve and analyze our Service.\nYou can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Service.\nExamples of Cookies we use:\nSession Cookies. We use Session Cookies to operate our Service. Preference Cookies. We use Preference Cookies to remember your preferences and various settings. Security Cookies. We use Security Cookies for security purposes. Use of Data Denis Trofimov’s Blog uses the collected data for various purposes:\nTo provide and maintain the Service To notify you about changes to our Service To allow you to participate in interactive features of our Service when you choose to do so To provide customer care and support To provide analysis or valuable information so that we can improve the Service To monitor the usage of the Service To detect, prevent and address technical issues Transfer Of Data Your information, including Personal Data, may be transferred to — and maintained on — computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.\nIf you are located outside Russian Federation and choose to provide information to us, please note that we transfer the data, including Personal Data, to Russian Federation and process it there.\nYour consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.\nDenis Trofimov’s Blog will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.\nDisclosure Of Data Legal Requirements Denis Trofimov’s Blog may disclose your Personal Data in the good faith belief that such action is necessary to:\nTo comply with a legal obligation To protect and defend the rights or property of Denis Trofimov\u0026#39;s Blog To prevent or investigate possible wrongdoing in connection with the Service To protect the personal safety of users of the Service or the public To protect against legal liability Security Of Data The security of your data is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.\nService Providers We may employ third party companies and individuals to facilitate our Service (“Service Providers”), to provide the Service on our behalf, to perform Service-related services or to assist us in analyzing how our Service is used.\nThese third parties have access to your Personal …","date":1528394575,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1528394575,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://denis-trofimov.github.io/privacy/","publishdate":"2018-06-07T18:02:55Z","relpermalink":"/privacy/","section":"","summary":"Effective date: June 07, 2018\nDenis Trofimov’s Blog (“us”, “we”, or “our”) operates the https://denis-trofimov.github.io website (the “Service”).\nThis page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data.","tags":null,"title":"Privacy Policy","type":"page"},{"authors":null,"categories":["iris recognition"],"content":"I found this pretty good list of Iris Recognition open-source codes. I am really appreciate work of the first author, thanhkien84. I asked myself, how to improve it? I have decided to add my value.\nI have checked all links and found replacements for stale links to projects OSIRIS, UND.\nIn the year 2003 there was only one iris recognition open source code from Libor Masek. His source code, written in Matlab, has been the baseline for generations of iris recognition coders. Recently there are a number of new open source codes come up. They are more mature and meet state-of-the-art accuracy. I summarise them in a list here for your reference.\nIris recognition projects \u0026lt;td rowspan=\u0026#34;2\u0026#34;\u0026gt; \u0026lt;b\u0026gt;Year/ Language\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td rowspan=\u0026#34;2\u0026#34;\u0026gt; \u0026lt;b\u0026gt;Approach\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td colspan=\u0026#34;3\u0026#34;\u0026gt; \u0026lt;b\u0026gt;Performance (EER)\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; ICE 2005 \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;MBGC portal\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;b\u0026gt;CASIA\u0026lt;/b\u0026gt; \u0026lt;/td\u0026gt; Libor Masek [project] \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2003,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Matlab\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Hough Circle + 1D Log-Gabor\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;OSIRIS 4.1 [\u0026lt;/span\u0026gt;\u0026lt;a href=\u0026#34;http://svnext.it-sudparis.eu/svnview2-eph/ref_syst/Iris_Osiris_v4.1/\u0026#34;\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;project dead link\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2013,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;C++\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Least square, Circle + 2D Gabor\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;1.09%\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;5455945\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;/\u0026lt;/span\u0026gt;\u0026lt;a href=\u0026#34;https://github.com/5455945/Iris_Osiris\u0026#34;\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Iris_Osiris\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;(OSIRIS 4.1 fork) \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Support OpenCV3.0+,OpenCV2.4.13\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2017, C++\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Same as OSIRIS 4.1\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;a href=\u0026#34;https://github.com/vonclites/syris\u0026#34;\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Python interface to OSIRIS Iris Segmentation and Recognition software \u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;(OSIRIS 4.1 fork)\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2017, Python\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Same as OSIRIS 4.1\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;VASIR 2.2 [\u0026lt;/span\u0026gt;\u0026lt;a href=\u0026#34;http://www.nist.gov/itl/iad/ig/vasir.cfm\u0026#34;\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;project\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2013,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;C++\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Circle + 2D Gabor\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;3.5%\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;13.9% best quality frame\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;30.6% all frames\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;NonidealIRIS [project]\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2006,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Matlab\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Ellipse + 2D, Gabor\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;USIT\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;a href=\u0026#34;http://www.wavelab.at/sources/USIT/\u0026#34;\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;project\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2016,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;C++\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Circle/Ellipse+\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;1D Log Gabor/\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2D Gabor/\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;DCT/ SIFT/\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;SURF/LBP\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;0.82%\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;UND\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;[\u0026lt;/span\u0026gt;\u0026lt;a href=\u0026#34;https://ideacenter.nd.edu/commercialization-engine/for-industry/available-technologies/software-available-for-license/iris-recognition-based-on-human-intrepretable-features/\u0026#34;\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;project\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;]\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;2016,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Matlab\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Circle,\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Crypts features\u0026lt;/span\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;3.58%\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;1.39%\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td colspan=\u0026#34;6\u0026#34;\u0026gt; \u0026lt;h2\u0026gt; \u0026lt;span style=\u0026#34;font-weight: 400;\u0026#34;\u0026gt;Iris segmentation only\u0026lt;/span\u0026gt; \u0026lt;/h2\u0026gt; …","date":1528317230,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1528317230,"objectID":"dc08f0581140e6dd49be14ab05f84b59","permalink":"https://denis-trofimov.github.io/10-known-open-source-projects-in-iris-recognition-2018/","publishdate":"2018-06-06T20:33:50Z","relpermalink":"/10-known-open-source-projects-in-iris-recognition-2018/","section":"post","summary":"I found this pretty good list of Iris Recognition open-source codes. I am really appreciate work of the first author, thanhkien84. I asked myself, how to improve it? I have decided to add my value.\nI have checked all links and found replacements for stale links to projects OSIRIS, UND.\nIn the year 2003 there was only one iris recognition open source code from Libor Masek. His source code, written in Matlab, has been the baseline for generations of iris recognition coders. Recently there are a number of new open source codes come up. They are more mature and meet state-of-the-art accuracy. I summarise them in a list here for your reference.\n","tags":["c++","code","dataset","iris recognition","iris segmentation","matlab","open source","project","python"],"title":"10 Known Open Source Projects in Iris Recognition 2018","type":"post"},{"authors":null,"categories":["machine learning"],"content":"First of all I would like to thank one person for reasoning me to start a developer blog. This person is John Sonmez, the author of the email course on creating a blog that boosts your career “How to Create a Blog That BOOSTS Your Career” and the founder of the Simple Programmer.\nIn this blog I plan to teach my reader step by step how to tackle tasks of the machine learnig in the computer vision using Python tools. I would like to show how a reader can start using former buzzwords like machine learnig, neural networks, computer vision, as a corresponding tools, Caffe package, TensorFlow, OpenCV. I know it is challeging to describe a complex notions ia a simple words, but I will try my best.\nQ: Why do I belive that my expertise can be valuable?\nA: In the company I am working since 2017 our team is solving problems like a face image segmentation, an eye image segmentation, an eye iris feature detection and encoding.\n","date":1525643346,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1525643346,"objectID":"9ce96d6b7eef36397829a0419f360f9d","permalink":"https://denis-trofimov.github.io/foreword-from-author/","publishdate":"2018-05-06T21:49:06Z","relpermalink":"/foreword-from-author/","section":"post","summary":"First of all I would like to thank one person for reasoning me to start a developer blog. This person is John Sonmez, the author of the email course on creating a blog that boosts your career “How to Create a Blog That BOOSTS Your Career” and the founder of the Simple Programmer.","tags":["blog","computer vision","developer","plan","python"],"title":"A foreword from the author.","type":"post"},{"authors":[],"categories":["backend","python","project"],"content":"I developed Python Backend VOIP traffic recording service for De Novo Lab, freelance job.\nRefactored a multithreaded VOIP traffic recording service from Python 2.7 to 3.4 Added Google Cloud Storage, configuration features, fixed JSON API, FTP, SFTP storage features bugs. The team from De Novo Lab was PM, sysadmin, 2 testers. Technology\nPython 2.7, 3.4, SQL; Git Bitbucket, Atlassian Jira; Eric Python IDE, vim; Flask, gcs-client, psycopg2 for PostgreSQL DB, SQLite, SQLAlchemy, tcpdump, tshark, mawk; Deployed on Debian, CentOS Linux ","date":1493646843,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493646843,"objectID":"097f34b6080fa2da991bc71c5de53186","permalink":"https://denis-trofimov.github.io/project/python-backend-voip-traffic-recording-service/","publishdate":"2017-05-01T16:54:03+03:00","relpermalink":"/project/python-backend-voip-traffic-recording-service/","section":"project","summary":"Freelance job for De Novo Lab","tags":["python","backend","git","jira","sql","cloud","google","api","voip","ftp","sftp","refactoring","multithreading","debian","centos","linux","postgresql","sqlite","sqlalchemy","deployment","flask","sqlite","sqlalchemy","tcpdump"],"title":"Python Voip Traffic Recording Service","type":"project"}]