<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Denis Trofimov Blog</title><link>https://denis-trofimov.github.io/</link><atom:link href="https://denis-trofimov.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Denis Trofimov Blog</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate><image><url>https://denis-trofimov.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Denis Trofimov Blog</title><link>https://denis-trofimov.github.io/</link></image><item><title>Example Talk</title><link>https://denis-trofimov.github.io/talk/example-talk/</link><pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/talk/example-talk/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click on the &lt;strong>Slides&lt;/strong> button above to view the built-in slides feature.
&lt;/div>
&lt;/div>
&lt;p>Slides can be added in a few ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create&lt;/strong> slides using Wowchemy&amp;rsquo;s &lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">&lt;em>Slides&lt;/em>&lt;/a> feature and link using &lt;code>slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong> an existing slide deck to &lt;code>static/&lt;/code> and link using &lt;code>url_slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Embed&lt;/strong> your slides (e.g. Google Slides) or presentation video on this page using &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">shortcodes&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Further event details, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">page elements&lt;/a> such as image galleries, can be added to the body of this page.&lt;/p></description></item><item><title>Python Backend Tutor for Practicum Yandex</title><link>https://denis-trofimov.github.io/project/python-backend-tutor-practicum-yandex/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/project/python-backend-tutor-practicum-yandex/</guid><description>&lt;p>&lt;a href="https://practicum.yandex.com/" target="_blank" rel="noopener">Yandex Practicum educational platform&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Our courses are created using knowledge that you won&amp;rsquo;t find in any textbook. With our intensive 6 to 9-month IT career advancement programs, Practicum by Yandex bridges the gap between short-term online courses and full-time internships.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Reviewed homework coding practice tasks.&lt;/li>
&lt;/ul></description></item><item><title>Python Big Data Tutor for HackerU</title><link>https://denis-trofimov.github.io/project/python-big-data-tutor-hackeru/</link><pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/project/python-big-data-tutor-hackeru/</guid><description>&lt;ul>
&lt;li>Tutored a course on Python for Big Data Analysis&lt;/li>
&lt;li>Created a 20 weeks course program and held class room studies&lt;/li>
&lt;li>Assigned and checked a homework exercises&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>HackerU educational programs are designed for an audience of different levels of training: from beginner specialists to top management. Actual curricula, international level teachers and practice in the learning process are the best investments in education.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://hackeru.pro" target="_blank" rel="noopener">HackerU - Israeli Higher School of Information Technology and Security&lt;/a>&lt;/p></description></item><item><title>Slides</title><link>https://denis-trofimov.github.io/slides/example/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/slides/example/</guid><description>&lt;h1 id="create-slides-in-markdown-with-wowchemy">Create slides in Markdown with Wowchemy&lt;/h1>
&lt;p>&lt;a href="https://wowchemy.com/" target="_blank" rel="noopener">Wowchemy&lt;/a> | &lt;a href="https://wowchemy.com/docs/content/slides/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Efficiently write slides in Markdown&lt;/li>
&lt;li>3-in-1: Create, Present, and Publish your slides&lt;/li>
&lt;li>Supports speaker notes&lt;/li>
&lt;li>Mobile friendly slides&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;ul>
&lt;li>Next: &lt;code>Right Arrow&lt;/code> or &lt;code>Space&lt;/code>&lt;/li>
&lt;li>Previous: &lt;code>Left Arrow&lt;/code>&lt;/li>
&lt;li>Start: &lt;code>Home&lt;/code>&lt;/li>
&lt;li>Finish: &lt;code>End&lt;/code>&lt;/li>
&lt;li>Overview: &lt;code>Esc&lt;/code>&lt;/li>
&lt;li>Speaker notes: &lt;code>S&lt;/code>&lt;/li>
&lt;li>Fullscreen: &lt;code>F&lt;/code>&lt;/li>
&lt;li>Zoom: &lt;code>Alt + Click&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://revealjs.com/pdf-export/" target="_blank" rel="noopener">PDF Export&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>Inline code: &lt;code>variable&lt;/code>&lt;/p>
&lt;p>Code block:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">porridge&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;blueberry&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">porridge&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;blueberry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Eating...&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="math">Math&lt;/h2>
&lt;p>In-line math: $x + y = z$&lt;/p>
&lt;p>Block math:&lt;/p>
&lt;p>$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p>
&lt;hr>
&lt;h2 id="fragments">Fragments&lt;/h2>
&lt;p>Make content appear incrementally&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{{% fragment %}} One {{% /fragment %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% fragment %}} **Two** {{% /fragment %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{% fragment %}} Three {{% /fragment %}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Press &lt;code>Space&lt;/code> to play!&lt;/p>
&lt;span class="fragment " >
One
&lt;/span>
&lt;span class="fragment " >
&lt;strong>Two&lt;/strong>
&lt;/span>
&lt;span class="fragment " >
Three
&lt;/span>
&lt;hr>
&lt;p>A fragment can accept two optional parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>: use a custom style (requires definition in custom CSS)&lt;/li>
&lt;li>&lt;code>weight&lt;/code>: sets the order in which a fragment appears&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="speaker-notes">Speaker Notes&lt;/h2>
&lt;p>Add speaker notes to your presentation&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{% speaker_note %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Only the speaker can read these notes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Press &lt;span class="sb">`S`&lt;/span> key to view
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{% /speaker_note %}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Press the &lt;code>S&lt;/code> key to view the speaker notes!&lt;/p>
&lt;aside class="notes">
&lt;ul>
&lt;li>Only the speaker can read these notes&lt;/li>
&lt;li>Press &lt;code>S&lt;/code> key to view&lt;/li>
&lt;/ul>
&lt;/aside>
&lt;hr>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>black: Black background, white text, blue links (default)&lt;/li>
&lt;li>white: White background, black text, blue links&lt;/li>
&lt;li>league: Gray background, white text, blue links&lt;/li>
&lt;li>beige: Beige background, dark text, brown links&lt;/li>
&lt;li>sky: Blue background, thin dark text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>night: Black background, thick white text, orange links&lt;/li>
&lt;li>serif: Cappuccino background, gray text, brown links&lt;/li>
&lt;li>simple: White background, black text, blue links&lt;/li>
&lt;li>solarized: Cream-colored background, dark green text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-noprocess data-shortcode-slide
data-background-image="/media/boards.jpg"
>
&lt;h2 id="custom-slide">Custom Slide&lt;/h2>
&lt;p>Customize the slide style and background&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">background-image&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/media/boards.jpg&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">background-color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#0000FF&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my-style&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="custom-css-example">Custom CSS Example&lt;/h2>
&lt;p>Let&amp;rsquo;s make headers navy colored.&lt;/p>
&lt;p>Create &lt;code>assets/css/reveal_custom.css&lt;/code> with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h1&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h2&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">navy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="questions">Questions?&lt;/h1>
&lt;p>&lt;a href="https://discord.gg/z8wNYzb" target="_blank" rel="noopener">Ask&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/docs/content/slides/" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p></description></item><item><title>New Year's Miracle</title><link>https://denis-trofimov.github.io/project/django-personalized-happy-new-year-greetings-call-order/</link><pubDate>Tue, 01 Jan 2019 22:04:25 +0300</pubDate><guid>https://denis-trofimov.github.io/project/django-personalized-happy-new-year-greetings-call-order/</guid><description>&lt;ul>
&lt;li>I had developed the Django powered SPA site for “New Year&amp;rsquo;s Miracle”.&lt;/li>
&lt;li>Team consisted of owner, sysadmin, DBA, designer, me, my mentee junior Python developer.&lt;/li>
&lt;li>I used Jinja 2 templates to install front-end, for storage on site I used PostreSQL DB 10, for delayed tasks as email and SMS sending &amp;ndash; Celery queue and Redis.&lt;/li>
&lt;li>I created a Docker container with UWSGI and Django for deployment on Nginx web server, and tested this container works on 38 core bare metal configuration.&lt;/li>
&lt;/ul>
&lt;figure id="figure-screenshot-of-call-order-received">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="Screenshot of call order received" srcset="
/project/django-personalized-happy-new-year-greetings-call-order/featured_hu48bb85a4bc53a02b9b4d638b7cdf34b6_637086_d14dfb37e0766556800d746a539c1519.webp 400w,
/project/django-personalized-happy-new-year-greetings-call-order/featured_hu48bb85a4bc53a02b9b4d638b7cdf34b6_637086_a241fd16510ba697b026781eff04a8e3.webp 760w,
/project/django-personalized-happy-new-year-greetings-call-order/featured_hu48bb85a4bc53a02b9b4d638b7cdf34b6_637086_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://denis-trofimov.github.io/project/django-personalized-happy-new-year-greetings-call-order/featured_hu48bb85a4bc53a02b9b4d638b7cdf34b6_637086_d14dfb37e0766556800d746a539c1519.webp"
width="760"
height="456"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Screenshot of call order received
&lt;/figcaption>&lt;/figure>
&lt;figure id="figure-screenshot-of-django-admin-view">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="Screenshot of Django admin view" srcset="
/project/django-personalized-happy-new-year-greetings-call-order/_hu88a7cbe722c308d9cc8c6d0e5675d975_51398_71f7b54c445303e583cf2c2fc8ad7b08.webp 400w,
/project/django-personalized-happy-new-year-greetings-call-order/_hu88a7cbe722c308d9cc8c6d0e5675d975_51398_575658d6c78b8b26e3ae6074c9778216.webp 760w,
/project/django-personalized-happy-new-year-greetings-call-order/_hu88a7cbe722c308d9cc8c6d0e5675d975_51398_30a5a6172c9bcf61c1a1ee996be56d53.webp 1200w"
src="https://denis-trofimov.github.io/project/django-personalized-happy-new-year-greetings-call-order/_hu88a7cbe722c308d9cc8c6d0e5675d975_51398_71f7b54c445303e583cf2c2fc8ad7b08.webp"
width="632"
height="703"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Screenshot of Django admin view
&lt;/figcaption>&lt;/figure>
&lt;p>Service description below I took from Russian resource for parents &lt;a href="https://www.ya-roditel.ru/national-campaign/news/v-etom-godu-6637/" target="_blank" rel="noopener">www.ya-roditel.ru direct link&lt;/a>&lt;/p>
&lt;p>It is Google translated to English.&lt;/p>
&lt;blockquote>
&lt;p>As part of the “New Year&amp;rsquo;s Miracle” project, a unique service of free personalized phone call from Santa Claus began its work. Previously, parents can choose not only a name, but also an individual instruction to the child from Santa Claus.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“Hot lines” of Santa Claus have been working for more than a year, but, as a rule, they mean receiving incoming calls and playing out non-personalized greetings. For the first time in history, the new service will allow you to receive a personalized call from the main New Year wizard. Having picked up the phone, the child will hear his name 5 times, and if at the same time he needs to be more attentive to his studies or not to refuse vegetables at dinner, Grandfather will definitely say so in his congratulation. Parents choose a convenient date and time for the call on their own - the coveted call can be heard at least five minutes after the application has been left.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>In addition, if the child has a brother or sister, congratulations will be addressed to both of them. A one-time congratulation is also provided for three children.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>The project manager Maxim Shuvaev noted that over the last 7 days of December it is planned to make up to a million calls, but so far only in Russia. In the future, it is planned to connect to the shares of other CIS countries.&lt;/p>
&lt;/blockquote></description></item><item><title>Moscow Python Conf++ 2018 video report.</title><link>https://denis-trofimov.github.io/moscow-python-conf-2018-video/</link><pubDate>Mon, 12 Nov 2018 19:31:30 +0000</pubDate><guid>https://denis-trofimov.github.io/moscow-python-conf-2018-video/</guid><description>&lt;p>Yes, the Moscow Python Conf++ 2018 conference was awesome.
Started so many acquaintances with the pythonists who make impact in the software world!
I got into picture at the stand of Moscow.Python on 1:50.&lt;/p>
&lt;p>I will come to the next one too!&lt;/p>
&lt;p>Mixed russian and english content, you are welcome to watch!&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/ap0dsL_JeLE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>How dictionaries are implemented in the Python language</title><link>https://denis-trofimov.github.io/how-dictionaries-are-implemented-in-the-python-language/</link><pubDate>Fri, 28 Sep 2018 19:12:58 +0000</pubDate><guid>https://denis-trofimov.github.io/how-dictionaries-are-implemented-in-the-python-language/</guid><description>&lt;div class="story-content">
&lt;p>
This post describes how dictionaries are implemented in the Python language.
&lt;/p>
&lt;p>
This article is actually a repost of originally posted at &lt;a href="https://www.laurentluce.com/posts/python-dictionary-implementation/">Laurent Luce&amp;#8217;s Blog&lt;/a> August 29, 2011 by Laurent Luce. I mentor several students of russian &lt;a href="https://learn.python.ru/">Learn Python&lt;/a> courses. They have questions about structures in Python and how to use them. I found this post a good help to me and possibly to my students.
&lt;/p>
&lt;/div>
&lt;p>Dictionaries are indexed by keys and they can be seen as associative arrays. Let’s add 3 key/value pairs to a dictionary:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The values can be accessed this way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Traceback&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">most&lt;/span> &lt;span class="n">recent&lt;/span> &lt;span class="n">call&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">File&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">module&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ne">KeyError&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The key ‘d’ does not exist so a KeyError exception is raised.&lt;/p>
&lt;h2 id="hash-tables">Hash tables&lt;/h2>
&lt;p>Python dictionaries are implemented using hash tables. It is an array whose indexes are obtained using a hash function on the keys. The goal of a hash function is to distribute the keys evenly in the array. A good hash function minimizes the number of collisions e.g. different keys having the same hash. Python does not have this kind of hash function. Its most important hash functions (for strings and ints) are very regular in common cases:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">hash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">hash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;namea&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;nameb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;namec&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;named&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1658398457&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1658398460&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1658398459&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1658398462&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We are going to assume that we are using strings as keys for the rest of this post. The hash function for strings in Python is defined as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="line">&lt;span class="cl">&lt;span class="n">arguments&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="nb">object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">returns&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">hash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">string_hash&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">hash&lt;/span> &lt;span class="n">cached&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> &lt;span class="nb">len&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="s1">&amp;#39;s length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">initialize&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="n">pointing&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">st&lt;/span> &lt;span class="n">char&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="nb">object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="n">pointed&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="n">shifted&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="mi">7&lt;/span> &lt;span class="n">bits&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="nb">len&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> &lt;span class="n">var&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1000003&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">xor&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="n">pointed&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">p&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment&lt;/span> &lt;span class="n">pointer&lt;/span> &lt;span class="n">p&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="n">xor&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="nb">object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cache&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="nb">hash&lt;/span> &lt;span class="n">so&lt;/span> &lt;span class="n">we&lt;/span> &lt;span class="n">don&lt;/span>&lt;span class="s1">&amp;#39;t need to calculate it again&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="nb">hash&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you run hash(‘a’) in Python, it will execute string_hash() and return 12416037344. Here we assume we are using a 64-bit machine.&lt;/p>
&lt;p>If an array of size x is used to store the key/value pairs then we use a mask equal to x-1 to calculate the slot index of the pair in the array. This makes the computation of the slot index fast. The probability to find an empty slot is high due to the resizing mechanism described below. This means that having a simple computation makes sense in most of the cases. If the size of the array is 8, the index for ‘a’ will be: hash(‘a’) &amp;amp; 7 = 0. The index for ‘b’ is 3, the index for ‘c’ is 2, the index for ‘z’ is 3 which is the same as ‘b’, here we have a collision.&lt;/p>
&lt;p>
&lt;img class="alignnone" src="https://www.laurentluce.com/images/blog/dict/hash.png" alt="The hash function for strings in Python for a table size of 8" width="375" height="311" />
&lt;/p>
&lt;p>
We can see that the Python hash function does a good job when the keys are consecutive which is good because it is quite common to have this type of data to work with. However, once we add the key ‘z’, there is a collision because it is not consecutive enough.
&lt;/p>
&lt;p>
We could use a linked list to store the pairs having the same hash but it would increase the lookup time e.g. not O(1) average anymore. The next section describes the collision resolution method used in the case of Python dictionaries.
&lt;/p>
&lt;h2>
Open addressing
&lt;/h2>
&lt;p>
Open addressing is a method of collision resolution where probing is used. In case of ‘z’, the slot index 3 is already used in the array so we need to probe for a different index to find one which is not already used. Adding a key/value pair will average O(1) and the lookup operation too.
&lt;/p>
&lt;p>
A quadratic probing sequence is used to find a free slot. The code is the following:
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">perturb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">perturb&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;=&lt;/span> &lt;span class="n">PERTURB_SHIFT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">use&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">next&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div> &lt;p>
Recurring on 5*j+1 quickly magnifies small differences in the bits that didn’t affect the initial index. The variable “perturb” gets the other bits of the hash code into play.
&lt;/p>
&lt;p>
Just out of curiosity, let’s look at the probing sequence when the table size is 32 and j = 3.&lt;br /> 3 -> 11 -> 19 -> 29 -> 5 -> 6 -> 16 -> 31 -> 28 -> 13 -> 2…
&lt;/p>
&lt;p>
You can read more about this probing sequence by looking at the source code of &lt;a href="http://svn.python.org/projects/python/trunk/Objects/dictobject.c">dictobject.c&lt;/a>. A detailed explanation of the probing mechanism can be found at the top of the file.
&lt;/p>
&lt;p>
&lt;img src="https://www.laurentluce.com/images/blog/dict/probing.png" alt="open addressing" />
&lt;/p>
&lt;p>
Now, let’s look at the Python internal code along with an example.
&lt;/p>
&lt;h2>
Dictionary C structures
&lt;/h2>
&lt;p>
The following C structure is used to store a dictionary entry: key/value pair. The hash, key and value are stored. PyObject is the base class of the Python objects.
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">me_hash&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">me_key&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">me_value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">PyDictEntry&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div> &lt;p>
The following structure represents a dictionary. ma_fill is the number of used slots + dummy slots. A slot is marked dummy when a key pair is removed. ma_used is the number of used slots (active). ma_mask is equal to the array’s size minus 1 and is used to calculate the slot index. ma_table is the array and ma_smalltable is the initial array of size 8.
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">_dictobject&lt;/span> &lt;span class="n">PyDictObject&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="n">_dictobject&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PyObject_HEAD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">ma_fill&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">ma_used&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">ma_mask&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PyDictEntry&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ma_table&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PyDictEntry&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">ma_lookup&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">PyDictObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PyDictEntry&lt;/span> &lt;span class="n">ma_smalltable&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">PyDict_MINSIZE&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dictionary-initialization">Dictionary initialization&lt;/h2>
&lt;p>
When you first create a dictionary, the function PyDict_New() is called. I removed some of the lines and converted the C code to pseudocode to concentrate on the key concepts.
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">returns&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">dictionary&lt;/span> &lt;span class="n">object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="nl">PyDict_New&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">allocate&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">dictionary&lt;/span> &lt;span class="n">object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clear&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">table&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="n">slots&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">dummy&lt;/span> &lt;span class="n">slots&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ma_fill&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">active&lt;/span> &lt;span class="n">slots&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ma_used&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">mask&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ma_value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">dictionary&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="n">lookup&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">lookdict_string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">allocated&lt;/span> &lt;span class="n">dictionary&lt;/span> &lt;span class="n">object&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div> &lt;h2>
Adding items
&lt;/h2>
&lt;p>
When a new key/value pair is added, PyDict_SetItem() is called. This function takes a pointer to the dictionary object and the key/value pair. It checks if the key is a string and calculates the hash or reuses the one cached if it exists. insertdict() is called to add the new key/value pair and the dictionary is resized if the number of used slots + dummy slots is greater than 2/3 of the array’s size.&lt;br /> Why 2/3? It is to make sure the probing sequence can find a free slot fast enough. We will look at the resizing function later.
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-py" data-lang="py">&lt;span class="line">&lt;span class="cl">&lt;span class="n">arguments&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">returns&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">OK&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">PyDict_SetItem&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="s1">&amp;#39;s hash cached:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">use&lt;/span> &lt;span class="nb">hash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calculate&lt;/span> &lt;span class="nb">hash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">call&lt;/span> &lt;span class="n">insertdict&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="n">dictionary&lt;/span> &lt;span class="nb">object&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">hash&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="n">pair&lt;/span> &lt;span class="n">added&lt;/span> &lt;span class="n">successfully&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">capacity&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">call&lt;/span> &lt;span class="n">dictresize&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">resize&lt;/span> &lt;span class="n">dictionary&lt;/span>&lt;span class="s1">&amp;#39;s table&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div> &lt;p>
inserdict() uses the lookup function lookdict_string() to find a free slot. This is the same function used to find a key. lookdict_string() calculates the slot index using the hash and the mask values. If it cannot find the key in the slot index = hash &amp; mask, it starts probing using the loop described above, until it finds a free slot. At the first probing try, if the key is null, it returns the dummy slot if found during the first lookup. This gives priority to re-use the previously deleted slots.
&lt;/p>
&lt;p>
We want to add the following key/value pairs: {‘a’: 1, ‘b’: 2′, ‘z’: 26, ‘y’: 25, ‘c’: 5, ‘x’: 24}. This is what happens:
&lt;/p>
&lt;p>
A dictionary structure is allocated with internal table size of 8.
&lt;/p>
&lt;ul>
&lt;li>PyDict_SetItem: key = &amp;#8216;a&amp;#8217;, value = 1&lt;/li>
&lt;ul>
&lt;li>hash = hash(&amp;#8216;a&amp;#8217;) = 12416037344&lt;/li>
&lt;li>insertdict&lt;/li>
&lt;ul>
&lt;li>lookdict_string&lt;/li>
&lt;ul>
&lt;li>slot index = hash &amp;#038; mask = 12416037344 &amp;#038; 7 = 0&lt;/li>
&lt;li>slot 0 is not used so return it&lt;/li>
&lt;/ul>
&lt;li>init entry at index 0 with key, value and hash&lt;/li>
&lt;li>ma_used = 1, ma_fill = 1&lt;/li>
&lt;/ul>
&lt;/ul>
&lt;li>PyDict_SetItem: key = &amp;#8216;b&amp;#8217;, value = 2&lt;/li>
&lt;ul>
&lt;li>hash = hash(&amp;#8216;b&amp;#8217;) = 12544037731&lt;/li>
&lt;li>insertdict&lt;/li>
&lt;ul>
&lt;li>lookdict_string&lt;/li>
&lt;ul>
&lt;li>slot index = hash &amp;#038; mask = 12544037731 &amp;#038; 7 = 3&lt;/li>
&lt;li>slot 3 is not used so return it&lt;/li>
&lt;/ul>
&lt;li>init entry at index 3 with key, value and hash&lt;/li>
&lt;li>ma_used = 2, ma_fill = 2&lt;/li>
&lt;/ul>
&lt;/ul>
&lt;li>PyDict_SetItem: key = &amp;#8216;z&amp;#8217;, value = 26&lt;/li>
&lt;ul>
&lt;li>hash = hash(&amp;#8216;z&amp;#8217;) = 15616046971&lt;/li>
&lt;li>insertdict&lt;/li>
&lt;ul>
&lt;li>lookdict_string&lt;/li>
&lt;ul>
&lt;li>slot index = hash &amp;#038; mask = 15616046971 &amp;#038; 7 = 3&lt;/li>
&lt;li>slot 3 is used so probe for a different slot: 5 is free&lt;/li>
&lt;/ul>
&lt;li>init entry at index 5 with key, value and hash&lt;/li>
&lt;li>ma_used = 3, ma_fill = 3&lt;/li>
&lt;/ul>
&lt;/ul>
&lt;li>PyDict_SetItem: key = &amp;#8216;y&amp;#8217;, value = 25&lt;/li>
&lt;ul>
&lt;li>hash = hash(&amp;#8216;y&amp;#8217;) = 15488046584&lt;/li>
&lt;li>insertdict&lt;/li>
&lt;ul>
&lt;li>lookdict_string&lt;/li>
&lt;ul>
&lt;li>slot index = hash &amp;#038; mask = 15488046584 &amp;#038; 7 = 0&lt;/li>
&lt;li>slot 0 is used so probe for a different slot: 1 is free&lt;/li>
&lt;/ul>
&lt;li>init entry at index 1 with key, value and hash&lt;/li>
&lt;li>ma_used = 4, ma_fill = 4&lt;/li>
&lt;/ul>
&lt;/ul>
&lt;li>PyDict_SetItem: key = &amp;#8216;c&amp;#8217;, value = 3&lt;/li>
&lt;ul>
&lt;li>hash = hash(&amp;#8216;c&amp;#8217;) = 12672038114&lt;/li>
&lt;li>insertdict&lt;/li>
&lt;ul>
&lt;li>lookdict_string&lt;/li>
&lt;ul>
&lt;li>slot index = hash &amp;#038; mask = 12672038114 &amp;#038; 7 = 2&lt;/li>
&lt;li>slot 2 is free so return it&lt;/li>
&lt;/ul>
&lt;li>init entry at index 2 with key, value and hash&lt;/li>
&lt;li>ma_used = 5, ma_fill = 5&lt;/li>
&lt;/ul>
&lt;/ul>
&lt;li>PyDict_SetItem: key = &amp;#8216;x&amp;#8217;, value = 24&lt;/li>
&lt;ul>
&lt;li>hash = hash(&amp;#8216;x&amp;#8217;) = 15360046201&lt;/li>
&lt;li>insertdict&lt;/li>
&lt;ul>
&lt;li>lookdict_string&lt;/li>
&lt;ul>
&lt;li>slot index = hash &amp;#038; mask = 15360046201 &amp;#038; 7 = 1&lt;/li>
&lt;li>slot 1 is used so probe for a different slot: 7 is free&lt;/li>
&lt;/ul>
&lt;li>init entry at index 7 with key, value and hash&lt;/li>
&lt;li>ma_used = 6, ma_fill = 6&lt;/li>
&lt;/ul>
&lt;/ul>
&lt;/ul>
&lt;p>
This is what we have so far:
&lt;/p>
&lt;p>
&lt;img src="https://www.laurentluce.com/images/blog/dict/insert.png" alt="python dictionary insert" />
&lt;/p>
&lt;p>
6 slots on 8 are used now so we are over 2/3 of the array’s capacity. dictresize() is called to allocate a larger array. This function also takes care of copying the old table entries to the new table.
&lt;/p>
&lt;p>
dictresize() is called with minused = 24 in our case which is 4 * ma_used. 2 * ma_used is used when the number of used slots is very large (greater than 50000). Why 4 times the number of used slots? It reduces the number of resize steps and it increases sparseness.
&lt;/p>
&lt;p>
The new table size needs to be greater than 24 and it is calculated by shifting the current size 1 bit left until it is greater than 24. It ends up being 32 e.g. 8 -> 16 -> 32.
&lt;/p>
&lt;p>
This is what happens with our table during resizing: a new table of size 32 is allocated. Old table entries are inserted into the new table using the new mask value which is 31. We end up with the following:
&lt;/p>
&lt;p>
&lt;img src="https://www.laurentluce.com/images/blog/dict/resizing.png" alt="python dictionary table resizing" />
&lt;/p>
&lt;h2>
Removing items
&lt;/h2>
&lt;p>
PyDict_DelItem() is called to remove an entry. The hash for this key is calculated and the lookup function is called to return the entry. The slot is now a dummy slot.
&lt;/p>
&lt;p>
We want to remove the key ‘c’ from our dictionary. We end up with the following array:
&lt;/p>
&lt;p>
&lt;img src="https://www.laurentluce.com/images/blog/dict/delete.png" alt="Python dictionary delete key" />
&lt;/p>
&lt;p>
Note that the delete item operation doesn’t trigger an array resize if the number of used slots is much less that the total number of slots. However, when a key/value pair is added, the need for resize is based on the number of used slots + dummy slots so it can shrink the array too.
&lt;/p>
&lt;p>
That’s it for now. I hope you enjoyed the article. Please write a comment if you have any feedback.
&lt;/p>
&lt;/div>
&lt;!--more-->
&lt;!--more-->
&lt;div class="metawrap">
&lt;p>
&amp;nbsp;
&lt;/p>
&lt;p>
&lt;em>Originally posted at &lt;a href="https://www.laurentluce.com/posts/python-dictionary-implementation/">Laurent Luce&amp;#8217;s Blog&lt;/a> August 29, 2011 by Laurent Luce.&lt;/em>
&lt;/p>
&lt;/div></description></item><item><title>Getting Mob Programming Buy-In at Your Organization</title><link>https://denis-trofimov.github.io/getting-mob-programming-buy-in-at-your-organization/</link><pubDate>Fri, 14 Sep 2018 22:17:50 +0000</pubDate><guid>https://denis-trofimov.github.io/getting-mob-programming-buy-in-at-your-organization/</guid><description>&lt;p>Repost of &lt;a href="https://simpleprogrammer.com/mob-programming/">&lt;a href="https://simpleprogrammer.com/mob-programming/" target="_blank" rel="noopener">https://simpleprogrammer.com/mob-programming/&lt;/a>.&lt;/a>&lt;/p>
&lt;p>
&lt;figure id="figure-this-piece-was-a-collaboration-written-by-nate-wixom-and-torrey-powell">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://spzone-simpleprogrammer.netdna-ssl.com/wp-content/uploads/2018/09/mod-square.png" alt="This piece was a collaboration written by Nate Wixom and Torrey Powell." loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
This piece was a collaboration written by Nate Wixom and Torrey Powell.
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>Mob programming is the best approach for many development applications. Mob projects result in a more finished project at release, with fewer bugs. By focusing on one project at a time, teams can complete projects more efficiently, and those projects are higher quality, requiring fewer revisions.&lt;/p>
&lt;p>The Project Management Institute’s &lt;a href="https://www.pmi.org/-/media/pmi/documents/public/pdf/learning/thought-leadership/pulse/pulse-of-the-profession-2017.pdf" target="_blank" rel="noopener">2017 Pulse of the Profession&lt;/a> survey reports that 71 percent of organizations now use &lt;a href="https://www.cio.com/article/3156998/agile-development/agile-project-management-a-beginners-guide.html" target="_blank" rel="noopener">agile methods&lt;/a> to complete projects. Included among agile approaches is mob programming, &lt;a href="https://www.agilealliance.org/glossary/mob-programming/" target="_blank" rel="noopener">defined by the Agile Alliance&lt;/a> as “a software development approach where the whole team works on the same thing, at the same time, in the same space, and at the same computer.” Picture multiple engineers at one station working collaboratively on one project.&lt;/p>
&lt;p>While many organizations have adopted mob programming as a core part of their development skill set, not all development organizations have bought in.&lt;/p>
&lt;p>Still, to implement mob programming successfully, you need buy-in from two important groups at your organization—the executive team and the programmers themselves.&lt;/p>
&lt;p>By following the strategies below, you can get organization buy-in for mob programming from top to bottom and start using this agile development methodology to provide superior finished products for clients both inside and outside your organization.&lt;/p>
&lt;h2 id="getting-buy-in-from-leadership">Getting Buy-in From Leadership&lt;/h2>
&lt;p>As far back as 2000, the benefits of developers teaming up on projects to solve problems have been evaluated against the performance of individuals. An oft-cited &lt;a href="http://sunnyday.mit.edu/16.355/williams.pdf" target="_blank" rel="noopener">joint study&lt;/a> between the University of North Carolina and the University of Utah showed that paired programmers were 15 percent more successful in solving problems and that their solutions did so with fewer lines of code.&lt;/p>
&lt;p>That may not be an impressive enough statistic for senior leadership, however. Shouldn’t it be at least 100 percent more efficient in order to be cost-effective?&lt;/p>
&lt;p>The truth of the matter is that such small efficiency gains in the short run may not be convincing. It’s a long game, and you’ll need to open leadership’s eyes to the possibilities of multiple projects spanning months, even years.&lt;/p>
&lt;p>If you can get leadership to agree to a six- to 12-month trial for mob programming, here are some of the benefits your organization will see:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Fully inventoried projects:&lt;/strong> With groups working more thoroughly and quickly on fewer projects, projects are less likely to be abandoned or forgotten, and more projects are fully completed. More eyes on every project means projects are more complete when they are released to the world.&lt;/li>
&lt;li>&lt;strong>Shorter turnaround on projects:&lt;/strong> Projects are completed quicker than when worked on by individual developers. With more eyes on each project, roadblocks are more easily overcome, and solutions to problems can quickly be brainstormed.&lt;/li>
&lt;li>&lt;strong>Fewer issues in live projects:&lt;/strong> As the projects are fully inventoried with more people reviewing every line of code, fewer bugs make it to the production environment. With individual developers working on projects, it’s often understood that there will be bugs that need to be fixed while a platform is live. You can eliminate a lot of this necessary rework through mob programming.&lt;/li>
&lt;li>&lt;strong>Quicker onboarding for programmers:&lt;/strong> Onboarding into a mob programming environment is more efficient, as you can drop new developers right into a mob that’s already at work on a project and get them contributing immediately rather than having to divert resources for training and management of new programmers’ early projects with your organization.&lt;/li>
&lt;/ul>
&lt;p>Over time, mob programming improves efficiency not only in the completion of successful projects but also in the integration of &lt;a href="https://simpleprogrammer.com/working-on-a-team/" target="_blank" rel="noopener">new team members&lt;/a>. You may not see the return on investment right away, but over time, it will be evident.&lt;/p>
&lt;p>Better results, faster, with fewer abandoned projects—that’s something any senior leader can get behind.&lt;/p>
&lt;h2 id="getting-buy-in-from-programmers-developers-and-engineers">Getting Buy-in From Programmers, Developers, and Engineers&lt;/h2>
&lt;p>
&lt;figure id="figure-getting-buy-in-from-senior-leadership-is-one-thing-getting-buy-in-from-the-people-who-will-actually-be-doing-the-mob-programming-is-something-else-entirely">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://spzone-simpleprogrammer.netdna-ssl.com/wp-content/uploads/2018/09/team-work.png" alt="Getting buy-in from senior leadership is one thing. Getting buy-in from the people who will actually be doing the mob programming is something else entirely." loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Getting buy-in from senior leadership is one thing. Getting buy-in from the people who will actually be doing the mob programming is something else entirely.
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>Many engineers, developers, and programmers are used to &lt;a href="https://simpleprogrammer.com/importance-community-cant-alone/" target="_blank" rel="noopener">working alone&lt;/a>—putting on the headphones and sitting down to crank out code, cut off from the outside world, for hours at a time. How do you get people who are used to working alone to be active participants in a group environment where the major reason for increased success is teamwork?&lt;/p>
&lt;p>In our experience, having gone through many iterations of mob programming while integrating it into the organization at Clearlink, not everyone is a good fit for mob programming—but many more than you would expect actually are, once they are involved.&lt;/p>
&lt;p>Why is that? Believe it or not, engineers like socializing with their colleagues, they just haven’t always had the chance to do so. Once they realize the level of engagement and the quality of code that is created while working collaboratively, job satisfaction increases, learning increases, and enhanced team bonding occurs. Mob programming is also a meritocracy where the best idea wins, and everyone in the mob has an equal voice—from the most senior developer on the team down to the newest arrival.&lt;/p>
&lt;p>Each mob contains two roles: &lt;em>the driver&lt;/em> and &lt;em>the navigator(s)&lt;/em>. The driver sits at the computer, inputting the code, while the navigators tell the driver what to type. These roles switch in the mob at regular eight to 15-minute intervals, giving everyone an equal chance to drive and to navigate.&lt;/p>
&lt;p>Everyone remains actively involved in the process, with ideas being shared and implemented quickly. Since everyone gets a chance to navigate, junior programmers gain confidence by asserting their ideas.&lt;/p>
&lt;p>We recommend, either at the completion of a project or at the end of each workweek, recognizing mob team members for their contributions to the project(s) they have worked on. Also, allow programmers to share what they learned and what they had trouble with. After a few projects and a few of these recognition and retrospective meetings, your team members will be comfortable working together and fully integrated into the mob programming mindset.&lt;/p>
&lt;h2 id="making-the-jump">Making the Jump&lt;/h2>
&lt;p>Changing development work from an individual to a mob programming style can be a big leap—one that can result in a few stumbles along the way. But once you get buy-in from leadership for a trial and can get some programmers on board, you’ll see &lt;a href="http://agileuprising.libsyn.com/mob-programming-lessons-learned-at-clearlinkcom" target="_blank" rel="noopener">how it can benefit your organization&lt;/a>.&lt;/p>
&lt;p>We’ve given you some navigation—so get ready to drive.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://flic.kr/p/nYis2p" target="_blank" rel="noopener">Photo&lt;/a> by &lt;a class="owner-name truncate" title="Go to Georgia National Guard's photostream" href="https://www.flickr.com/photos/ganatlguard/" data-track="attributionNameClick" data-rapid_p="86">Georgia National Guard&lt;/a> CC 2.0&lt;/li>
&lt;/ul></description></item><item><title>Review of Kevlin Henney`s talk Seven Ineffective Coding Habits of Many Programmers</title><link>https://denis-trofimov.github.io/review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/</link><pubDate>Sun, 09 Sep 2018 20:03:20 +0000</pubDate><guid>https://denis-trofimov.github.io/review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/</guid><description>&lt;p>&lt;em>I watched this video from the start till the end.&lt;/em>
&lt;em>I see this coding habits very often.&lt;/em>
&lt;em>I fought unsustainable spacing the wrong way in the past.&lt;/em>&lt;/p>
&lt;h2 id="kevlin-henneys-talk-video-description">Kevlin Henney`s talk video description&lt;/h2>
&lt;blockquote>
&lt;p>Habits help you manage the code complexity. You apply existing skill and knowledge automatically to the detail while focusing on the bigger picture.&lt;/p>
&lt;p>But because you acquire habits largely by imitation, and rarely question them, how do you know your habits are effective? Many of the habits that programmers have for naming, formatting, commenting and unit testing do not stand up as rational and practical on closer inspection. &lt;a href="https://en.wikipedia.org/wiki/Kevlin_Henney" target="_blank" rel="noopener">Kevlin Henney&lt;/a> &lt;a href="https://twitter.com/kevlinhenney" target="_blank" rel="noopener">@kevlinhenney&lt;/a> examines seven coding habits that are not as effective as programmers believe, and to suggest alternatives.&lt;/p>
&lt;/blockquote>
&lt;h2 id="seven-ineffective-coding-habits-of-many-programmers">Seven Ineffective Coding Habits of Many Programmers&lt;/h2>
&lt;ol>
&lt;li>
&lt;blockquote>
&lt;p>noise code&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>unsustainable spacing&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>lego naming&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>underabstraction&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>unencapsulated state&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>getters and setters&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>uncohesive tests&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2 id="screenshots">Screenshots&lt;/h2>
&lt;div class="gallery-grid">
&lt;div class="gallery-item gallery-item--medium">
&lt;a data-fancybox="gallery-2018-09-09-review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers" href="https://denis-trofimov.github.io/media/albums/2018-09-09-review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/ITT%202016%20-%20Kevlin%20Henney%20-%20Seven%20Ineffective%20Coding%20Habits%20of%20Many%20Programmers%20Code%20alignment%202.png" >
&lt;img src="https://denis-trofimov.github.io/media/albums/2018-09-09-review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/_hu280ada8882d6e991cdf6d87ef052cb54_121303_3409545b713dde9fe80cd8405ffa0329.webp" loading="lazy" alt="ITT 2016 - Kevlin Henney - Seven Ineffective Coding Habits of Many Programmers Code alignment 2.png" width="750" height="366">
&lt;/a>
&lt;/div>
&lt;div class="gallery-item gallery-item--medium">
&lt;a data-fancybox="gallery-2018-09-09-review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers" href="https://denis-trofimov.github.io/media/albums/2018-09-09-review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/ITT%202016%20-%20Kevlin%20Henney%20-%20Seven%20Ineffective%20Coding%20Habits%20of%20Many%20Programmers%20Code%20alignment%203.png" >
&lt;img src="https://denis-trofimov.github.io/media/albums/2018-09-09-review-of-kevlin-henneys-talk-seven-ineffective-coding-habits-of-many-programmers/_hue80eae6fb2724bcd2df107f3cf38bcb7_145315_9666e656dfc0e4c3c51fe72a389fed35.webp" loading="lazy" alt="ITT 2016 - Kevlin Henney - Seven Ineffective Coding Habits of Many Programmers Code alignment 3.png" width="750" height="367">
&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="source">Source&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/ZsHMHukIlJY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Python Tutor for Learn Python</title><link>https://denis-trofimov.github.io/project/python-tutor-learn-python/</link><pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/project/python-tutor-learn-python/</guid><description>&lt;p>&lt;a href="https://learn.python.ru" target="_blank" rel="noopener">Learn Python programming course&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>PYTHON PROGRAMMING COURSE FOR ANY LEVEL WITH ACCESS TO PRACTICE&lt;/p>
&lt;/blockquote>
&lt;h2 id="achivements">Achivements:&lt;/h2>
&lt;ul>
&lt;li>Tutored into Python course for 10 weeks, 40 hours total, participated in 4 waves total.&lt;/li>
&lt;li>Supervised 21 students working on their diploma projects.&lt;/li>
&lt;li>Assigned and checked a homework exercises.&lt;/li>
&lt;/ul></description></item><item><title>Lessons Learned by Mentoring Programmers repost.</title><link>https://denis-trofimov.github.io/lessons-learned-by-mentoring-programmers-repost/</link><pubDate>Wed, 05 Sep 2018 17:28:46 +0000</pubDate><guid>https://denis-trofimov.github.io/lessons-learned-by-mentoring-programmers-repost/</guid><description>&lt;p>Hello!&lt;/p>
&lt;p>I got fresh new article from The Simple Programmer blog, &lt;a href="https://simpleprogrammer.com/lessons-learned-mentoring-programmers/" target="_blank" rel="noopener">Lessons Learned by Mentoring Programmers&lt;/a> .&lt;/p>
&lt;p>It is a good coincidence, for me it is the right time to get to know about mentoring.&lt;/p>
&lt;p>I will take part the &lt;a href="https://learn.python.ru/" target="_blank" rel="noopener">learn.python.ru&lt;/a> course in Moscow as a new curator for a group of 5-6 students. I am totally new to all this field, teaching programming. I am to help students to get well with Python language, answer questions, check they homework, help to plan they project. That course will be 10 weeks long.&lt;/p>
&lt;p>I urge you to read Ryan`s post. It covers the topics:&lt;/p>
&lt;ol>
&lt;li>
&lt;blockquote>
&lt;p>Get well with mentor imposter syndrome.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>Encourage your mentee work because they need it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>If the concept is good not nitpick the form.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>Your Way Isn’t Always the Only Way.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>You Are Not Wasting Their Time.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>Use Questions to Collaborate&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;p>Thanks to author &lt;a href="https://simpleprogrammer.com/author/ryanpalo/" target="_blank" rel="noopener">Ryan Palo&lt;/a>! Please keep on writing and sharing!&lt;/p>
&lt;ul>
&lt;li>Pair programming photo CC 2.0 Kang-min Liu &lt;a href="https://www.flickr.com/photos/gugod/" target="_blank" rel="noopener">https://www.flickr.com/photos/gugod/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Joining phenomenal machine learning course fast.ai using free Google Colaboratory setup.</title><link>https://denis-trofimov.github.io/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/</link><pubDate>Sat, 01 Sep 2018 19:49:22 +0000</pubDate><guid>https://denis-trofimov.github.io/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/</guid><description>&lt;h1 id="joining-phenomenal-deep-learning-course-fastai-using-free-google-colaboratory-setup">Joining phenomenal deep learning course fast.ai using free Google Colaboratory setup.&lt;/h1>
&lt;p>My colleague Ilia Lebedev @melevir at twitter recommended me a cool deep learning course at &lt;a href="http://course.fast.ai/" target="_blank" rel="noopener">http://course.fast.ai.&lt;/a>&lt;/p>
&lt;p>&lt;em class="markup--em markup--p-em">Much appreciation to &lt;/em>&lt;a class="markup--anchor markup--p-anchor" href="https://twitter.com/jeremyphoward" target="_blank" rel="noopener nofollow nofollow noopener nofollow noopener" data-href="https://twitter.com/jeremyphoward">&lt;em class="markup--em markup--p-em">Jeremy&lt;/em>&lt;/a>&lt;em class="markup--em markup--p-em"> and &lt;/em>&lt;a class="markup--anchor markup--p-anchor" href="https://twitter.com/math_rachel" target="_blank" rel="noopener nofollow nofollow noopener nofollow noopener" data-href="https://twitter.com/math_rachel">&lt;em class="markup--em markup--p-em">Rachel&lt;/em>&lt;/a>&lt;em class="markup--em markup--p-em"> who gave us this opportunity to learn. &lt;/em>They position themself as a course for software developers, not data scientists. This course is of January 2018, is the second version.&lt;/p>
&lt;p>Listen that the course said for itself.&lt;/p>
&lt;blockquote>
&lt;h2 id="you-will-learn-how-to">YOU WILL LEARN HOW TO:&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="ab-item" href="https://denis-trofimov.github.io/wp-admin/post-new.php" aria-haspopup="true">&lt;span class="ab-label">New&lt;/span>&lt;/a>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;"> Set up your own GPU server in the cloud&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Use the fastai and Pytorch libraries in &lt;/span>&lt;/span>&lt;/span>&lt;a href="https://www.python.org/" target="_blank" rel="noopener">&lt;span style="color: #dba901;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">python&lt;/span>&lt;/span>&lt;/span>&lt;/a>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;"> to train and run deep learning models&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Build, debug, and visualize a state of the art convolutional neural network (CNN) for recognizing images&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Build state of the art recommendation systems using neural-network based collaborative filtering&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Build state of the art time series and structured data models using categorical embeddings&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Get great results even from small datasets, by using transfer learning&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Understand the components of a neural network, including activation functions, dense and convolutional layers, and optimizers&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Build, debug, and visualize a recurrent neural network (RNN) for natural language processing (NLP), including developing a sentiment classifier which beat all previous academic benchmarks.&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;li>&lt;span style="color: #444444;">&lt;span style="font-family: Raleway, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;">&lt;span style="font-size: small;">Recognize and deal with over-fitting, by using data augmentation, dropout, batch normalization, and similar techniques&lt;/span>&lt;/span>&lt;/span>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="back-to-asetup-for-fastai-courseusing-free-google-colaboratory">Back to a setup for fast.ai course using free Google Colaboratory.&lt;/h2>
&lt;p>In this post, I will show how to use organize setup of &lt;a class="markup--anchor markup--p-anchor" href="https://colab.research.google.com/" target="_blank" rel="nofollow noopener" data-href="https://colab.research.google.com/">Google Colaboratory&lt;/a> for the fast.ai deep learning course. You should repeat this simple steps every time you connect to a new GPU.&lt;/p>
&lt;p>In order to train a neural network, we will most certainly need Graphics Processing Unit (GPU)  – and not everyone have a fast one. Without a decent GPU a singe step will last for hours instead of minutes. Sign-up to &lt;a class="markup--anchor markup--p-anchor" href="https://colab.research.google.com/" target="_blank" rel="nofollow noopener" data-href="https://colab.research.google.com/">Google Colaboratory&lt;/a> to get a hosted Jupyter notebook environment connected&lt;strong class="markup--strong markup--p-strong"> &lt;/strong>with a &lt;strong>free&lt;/strong> Tesla K80 GPU.&lt;/p>
&lt;p>You can use GPU as a backend free for 12 hours at a time. That is very good news for us!&lt;figure id="6aed" class="graf graf--figure graf-after--p">&lt;/p>
&lt;h2 class="aspectRatioPlaceholder.is-locked" id="the-steps-to-repeat-every-time-you-connect-to-a-new-gpu">The steps to repeat every time you connect to a new GPU.&lt;/h2>
&lt;h3 id="setup-step-0-select-freegpu">Setup step 0: Select Free GPU&lt;/h3>
&lt;p id="7ecb" class="graf graf--p graf-after--h3">
It is so simple to alter default hardware &lt;strong class="markup--strong markup--p-strong">(CPU to GPU or vice versa)&lt;/strong>; just follow &lt;strong class="markup--strong markup--p-strong">Edit > Notebook settings&lt;/strong> or &lt;strong class="markup--strong markup--p-strong">Runtime>Change runtime type &lt;/strong>and &lt;strong class="markup--strong markup--p-strong">select GPU &lt;/strong>as &lt;strong class="markup--strong markup--p-strong">Hardware accelerator&lt;/strong>.
&lt;/p>
&lt;p>
&lt;figure id="figure-open-jupyter-notebook-settings-of-google-colaboratory">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="Open Jupyter notebook settings of Google Colaboratory" srcset="
/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/Open-Jupyter-notebook-settings-of-Google-Colaboratory_hue0ac69606a92159518c2105deea11cdb_39486_6f1446b12b26f6abfb504953c1f036a3.webp 400w,
/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/Open-Jupyter-notebook-settings-of-Google-Colaboratory_hue0ac69606a92159518c2105deea11cdb_39486_92bdae8be10c5153f1d693121cd82263.webp 760w,
/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/Open-Jupyter-notebook-settings-of-Google-Colaboratory_hue0ac69606a92159518c2105deea11cdb_39486_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://denis-trofimov.github.io/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/Open-Jupyter-notebook-settings-of-Google-Colaboratory_hue0ac69606a92159518c2105deea11cdb_39486_6f1446b12b26f6abfb504953c1f036a3.webp"
width="389"
height="477"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Open Jupyter notebook settings of Google Colaboratory
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>
&lt;figure id="figure-select-a-free-tesla-k80-gpu-in-jupyter-notebook-settings-of-google-colaboratory">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="Select a free Tesla K80 GPU in Jupyter notebook settings of Google Colaboratory" srcset="
/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/_hucc17301c6f01fc0764978ae626707c73_19094_e0d0bd83a625a8f1775b642017cc703a.webp 400w,
/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/_hucc17301c6f01fc0764978ae626707c73_19094_3f0dc43162ed2bdf281a0575300cde25.webp 760w,
/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/_hucc17301c6f01fc0764978ae626707c73_19094_841565e17596dd8bc39e4c8ce4d3bf3b.webp 1200w"
src="https://denis-trofimov.github.io/joining-phenomenal-machine-learning-course-fast-ai-using-free-google-colaboratory-setup/_hucc17301c6f01fc0764978ae626707c73_19094_e0d0bd83a625a8f1775b642017cc703a.webp"
width="386"
height="302"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Select a free Tesla K80 GPU in Jupyter notebook settings of Google Colaboratory
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;h3 id="setup-step-1-install-librariesfor-fastaicourse">Setup step 1: install libraries for fast.ai course.&lt;/h3>
&lt;p>Enter this code in a new code block on top of a notebook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install torch compatible with fastai&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">os&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">wheel.pep425tags&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">get_abbr_impl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">get_impl_ver&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">get_abi_tag&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">platform&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{}{}&lt;/span>&lt;span class="s1">-&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">get_abbr_impl&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">get_impl_ver&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">get_abi_tag&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">accelerator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;cu80&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/opt/bin/nvidia-smi&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s1">&amp;#39;cpu&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">!&lt;/span>&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">q&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pytorch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">whl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">accelerator&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">torch&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">0.3.1&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">platform&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">linux_x86_64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">whl&lt;/span> &lt;span class="n">fastai&lt;/span> &lt;span class="n">torchvision&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will take a while.&lt;/p>
&lt;h3 id="setup-step-2-model-weights-download">Setup step 2: model weights download.&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Model weights for other network architectures (e.g. resnext50):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">!&lt;/span>&lt;span class="n">wget&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">q&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ai&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">models&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">weights&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tgz&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">tar&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">xzf&lt;/span> &lt;span class="n">weights&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tgz&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">C&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">python3&lt;/span>&lt;span class="mf">.6&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">dist&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">packages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">fastai&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The step 2 will take a while too, need to download and unpack 1.1 Gb.&lt;/p>
&lt;h3 id="setup-step-3-dataset-download">Setup step 3: dataset download.&lt;/h3>
&lt;p>For lesson 1, 2, 3 you need dogs $ cats dataset. This code does it. The dataset dogs &amp;amp; cats is available at &lt;a href="http://files.fast.ai/data/dogscats.zip" target="_blank" rel="noopener">http://files.fast.ai/data/dogscats.zip&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="err">!&lt;/span>&lt;span class="n">mkdir&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">!&lt;/span>&lt;span class="n">wget&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">q&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">files&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ai&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">dogscats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">!&lt;/span>&lt;span class="n">unzip&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">q&lt;/span> &lt;span class="n">dogscats&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zip&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some lessons as 2nd use Kaggle datasets, but it is a theme for another article.&lt;/p>
&lt;p>Summary of all my setup steps you can copy from my Github Gist &lt;strong class="gist-header-title css-truncate-target">&lt;a href="https://gist.github.com/denis-trofimov/77f8b6418b9ef4b45adca7ed587462d2">Fast.ai install script.py.&lt;/a>&lt;/strong>&lt;/p>
&lt;p>I will try to keep it updated as long as I have interest in fast.ai and Google Colaboratory.&lt;/p></description></item><item><title>What easy questions on Javascript I can ask?</title><link>https://denis-trofimov.github.io/what-easy-questions-on-javascript-i-can-ask/</link><pubDate>Mon, 25 Jun 2018 23:29:33 +0000</pubDate><guid>https://denis-trofimov.github.io/what-easy-questions-on-javascript-i-can-ask/</guid><description>&lt;p>In this post I speak about some basic Javascript quesions and answers, which I have made passing throught course &lt;a href="https://simpleprogrammer.com/store/products/javascript-launchpad/?c=jslp70&amp;amp;utm_source=drip&amp;amp;utm_medium=email&amp;amp;utm_campaign=js-launchpad-sale&amp;amp;utm_content=js-launchpad-sale-email-2&amp;amp;__s=25hdpkywdqsodfst7mgj&amp;amp;utm_source=drip&amp;amp;utm_medium=email&amp;amp;utm_campaign=JavaScript&amp;#43;LaunchPad&amp;#43;Introduction&amp;amp;utm_content=Q%26A&amp;#43;about&amp;#43;JavaScript&amp;#43;LaunchPad" target="_blank" rel="noopener">&lt;strong>JavaScript LaunchPad&lt;/strong>&lt;/a> &lt;strong>by&lt;/strong> &lt;strong>&lt;a href="https://simpleprogrammer.com/" target="_blank" rel="noopener">Simple Programmer.com.&lt;/a>&lt;/strong>&lt;/p>
&lt;p>I have interviewed 3 persons in the year 2017 for developer position to the company I work for, Vzor Systems LLC.&lt;/p>
&lt;p>It turned out that to prepare for interview from the interviewer side one should do some effort. If the company is not a big but a small startup, it is my job as interviewer to think of questions and written tests to check a candidate`s skills and knowledge. One time I was looking for typical questions on interview for C++ developer position.&lt;/p>
&lt;p>Having an interviewer field of view in mind, I created this questions list when I have finished first **&lt;a href="https://simpleprogrammer.com/store/products/javascript-launchpad/?c=jslp70&amp;amp;utm_source=drip&amp;amp;utm_medium=email&amp;amp;utm_campaign=js-launchpad-sale&amp;amp;utm_content=js-launchpad-sale-email-2&amp;amp;__s=25hdpkywdqsodfst7mgj&amp;amp;utm_source=drip&amp;amp;utm_medium=email&amp;amp;utm_campaign=JavaScript&amp;#43;LaunchPad&amp;#43;Introduction&amp;amp;utm_content=Q%26A&amp;#43;about&amp;#43;JavaScript&amp;#43;LaunchPad" target="_blank" rel="noopener">JavaScript LaunchPad&lt;/a> **chapter “&lt;strong>Execution Contexts and Lexical Environments”.&lt;/strong>&lt;/p>
&lt;h2 id="span-stylefont-weight-400the-execution-context-8211-creation--hoistingspan">&lt;span style="font-weight: 400;">The Execution Context – Creation &amp;amp; Hoisting&lt;/span>&lt;/h2>
&lt;h3 id="question-what-this-code-give-to-the-console">Question: What this code give to the console?&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">b&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Hello World!&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Called b!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="answer">Answer:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Called&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Hello&lt;/span> &lt;span class="nx">World&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="heading">&lt;/h2>
&lt;h2 id="span-stylefont-weight-400functions-context-and-variable-environmentsspan">&lt;span style="font-weight: 400;">Functions, Context, and Variable Environments&lt;/span>&lt;/h2>
&lt;h3 id="question-what-this-code-give-to-the-console-1">Question: What this code give to the console?&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">myVar&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myVar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">myVar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myVar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">b&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">myVar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myVar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">a&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myVar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="answer-1">Answer:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="heading-1">&lt;/h2>
&lt;h2 id="span-stylefont-weight-400the-scope-chainspan">&lt;span style="font-weight: 400;">The Scope Chain&lt;/span>&lt;/h2>
&lt;h3 id="question-what-this-code-give-to-the-console-2">Question: What this code give to the console?&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">function&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">myVar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">b&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">myVar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">a&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">b&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="answer-2">Answer:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Uncaught&lt;/span> &lt;span class="nx">ReferenceError&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">not&lt;/span> &lt;span class="nx">defined&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="span-stylefont-weight-400what-about-asynchronous-callbacksspan">&lt;span style="font-weight: 400;">What About Asynchronous Callbacks&lt;/span>&lt;/h2>
&lt;h3 id="question-what-this-code-give-to-the-console-3">Question: What this code give to the console?&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// long running function
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">waitThreeSeconds&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">ms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3000&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getTime&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">ms&lt;/span>&lt;span class="p">){}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;finished function&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">clickHandler&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;click event!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// listen for the click event
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;click&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">clickHandler&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">waitThreeSeconds&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;finished execution&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="answer-3">Answer:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">finished&lt;/span> &lt;span class="kd">function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">finished&lt;/span> &lt;span class="nx">execution&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">click&lt;/span> &lt;span class="nx">event&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Terms and Conditions</title><link>https://denis-trofimov.github.io/terms/</link><pubDate>Thu, 07 Jun 2018 18:08:44 +0000</pubDate><guid>https://denis-trofimov.github.io/terms/</guid><description>&lt;p>&lt;span style="font-weight: 400;">Last updated: June 07, 2018&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Please read these Terms and Conditions (“Terms”, “Terms and Conditions”) carefully before using the &lt;a href="https://denis-trofimov.github.io" target="_blank" rel="noopener">https://denis-trofimov.github.io&lt;/a> website (the “Service”) operated by Denis Trofimov&amp;rsquo;s Blog (“us”, “we”, or “our”).&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Your access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">By accessing or using the Service you agree to be bound by these Terms. If you disagree with any part of the terms then you may not access the Service. This Terms and Conditions agreement for Denis Trofimov&amp;rsquo;s Blog is powered by &lt;/span>&lt;a href="https://termsfeed.com/" target="_blank" rel="noopener">&lt;span style="font-weight: 400;">TermsFeed&lt;/span>&lt;/a>&lt;span style="font-weight: 400;">.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400accountsspan">&lt;span style="font-weight: 400;">Accounts&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">When you create an account with us, you must provide us information that is accurate, complete, and current at all times. Failure to do so constitutes a breach of the Terms, which may result in immediate termination of your account on our Service.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">You are responsible for safeguarding the password that you use to access the Service and for any activities or actions under your password, whether your password is with our Service or a third-party service.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">You agree not to disclose your password to any third party. You must notify us immediately upon becoming aware of any breach of security or unauthorized use of your account.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400links-to-other-web-sitesspan">&lt;span style="font-weight: 400;">Links To Other Web Sites&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">Our Service may contain links to third-party web sites or services that are not owned or controlled by Denis Trofimov&amp;rsquo;s Blog.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Denis Trofimov&amp;rsquo;s Blog has no control over, and assumes no responsibility for, the content, privacy policies, or practices of any third party web sites or services. You further acknowledge and agree that Denis Trofimov&amp;rsquo;s Blog shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with use of or reliance on any such content, goods or services available on or through any such web sites or services.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">We strongly advise you to read the terms and conditions and privacy policies of any third-party web sites or services that you visit.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400terminationspan">&lt;span style="font-weight: 400;">Termination&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">We may terminate or suspend access to our Service immediately, without prior notice or liability, for any reason whatsoever, including without limitation if you breach the Terms.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">All provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">We may terminate or suspend your account immediately, without prior notice or liability, for any reason whatsoever, including without limitation if you breach the Terms.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Upon termination, your right to use the Service will immediately cease. If you wish to terminate your account, you may simply discontinue using the Service.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">All provisions of the Terms which by their nature should survive termination shall survive termination, including, without limitation, ownership provisions, warranty disclaimers, indemnity and limitations of liability.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400governing-lawspan">&lt;span style="font-weight: 400;">Governing Law&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">These Terms shall be governed and construed in accordance with the laws of Russian Federation, without regard to its conflict of law provisions.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Our failure to enforce any right or provision of these Terms will not be considered a waiver of those rights. If any provision of these Terms is held to be invalid or unenforceable by a court, the remaining provisions of these Terms will remain in effect. These Terms constitute the entire agreement between us regarding our Service, and supersede and replace any prior agreements we might have between us regarding the Service.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400changesspan">&lt;span style="font-weight: 400;">Changes&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a revision is material we will try to provide at least 15 days notice prior to any new terms taking effect. What constitutes a material change will be determined at our sole discretion.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">By continuing to access or use our Service after those revisions become effective, you agree to be bound by the revised terms. If you do not agree to the new terms, please stop using the Service.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400contact-usspan">&lt;span style="font-weight: 400;">Contact Us&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">If you have any questions about these Terms, please &lt;a href="https://denis-trofimov.github.io/#contact">contact&lt;/a> us.&lt;/span>&lt;/p></description></item><item><title>Privacy Policy</title><link>https://denis-trofimov.github.io/privacy/</link><pubDate>Thu, 07 Jun 2018 18:02:55 +0000</pubDate><guid>https://denis-trofimov.github.io/privacy/</guid><description>&lt;p>&lt;span style="font-weight: 400;">Effective date: June 07, 2018&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Denis Trofimov&amp;rsquo;s Blog (“us”, “we”, or “our”) operates the &lt;a href="https://denis-trofimov.github.io" target="_blank" rel="noopener">https://denis-trofimov.github.io&lt;/a> website (the “Service”).&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">This page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. This Privacy Policy for Denis Trofimov&amp;rsquo;s Blog is powered by &lt;/span>&lt;a href="https://termsfeed.com/" target="_blank" rel="noopener">&lt;span style="font-weight: 400;">TermsFeed&lt;/span>&lt;/a>&lt;span style="font-weight: 400;">.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, accessible from &lt;a href="https://denis-trofimov.github.io" target="_blank" rel="noopener">https://denis-trofimov.github.io&lt;/a>&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400information-collection-and-usespan">&lt;span style="font-weight: 400;">Information Collection And Use&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">We collect several different types of information for various purposes to provide and improve our Service to you.&lt;/span>&lt;/p>
&lt;h3 id="span-stylefont-weight-400types-of-data-collectedspan">&lt;span style="font-weight: 400;">Types of Data Collected&lt;/span>&lt;/h3>
&lt;h4 id="span-stylefont-weight-400personal-dataspan">&lt;span style="font-weight: 400;">Personal Data&lt;/span>&lt;/h4>
&lt;p>&lt;span style="font-weight: 400;">While using our Service, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you (“Personal Data”). Personally identifiable information may include, but is not limited to:&lt;/span>&lt;/p>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">Email address&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">First name and last name&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">Phone number&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">Address, State, Province, ZIP/Postal code, City&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">Cookies and Usage Data&lt;/span>
&lt;/li>
&lt;h4 id="span-stylefont-weight-400usage-dataspan">&lt;span style="font-weight: 400;">Usage Data&lt;/span>&lt;/h4>
&lt;p>&lt;span style="font-weight: 400;">We may also collect information how the Service is accessed and used (“Usage Data”). This Usage Data may include information such as your computer’s Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that you visit, the time and date of your visit, the time spent on those pages, unique device identifiers and other diagnostic data.&lt;/span>&lt;/p>
&lt;h4 id="span-stylefont-weight-400tracking--cookies-dataspan">&lt;span style="font-weight: 400;">Tracking &amp;amp; Cookies Data&lt;/span>&lt;/h4>
&lt;p>&lt;span style="font-weight: 400;">We use cookies and similar tracking technologies to track the activity on our Service and hold certain information.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Cookies are files with small amount of data which may include an anonymous unique identifier. Cookies are sent to your browser from a website and stored on your device. Tracking technologies also used are beacons, tags, and scripts to collect and track information and to improve and analyze our Service.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">You can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Service.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Examples of Cookies we use:&lt;/span>&lt;/p>
&lt;li style="font-weight: 400;">
&lt;b>Session Cookies.&lt;/b>&lt;span style="font-weight: 400;"> We use Session Cookies to operate our Service.&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;b>Preference Cookies.&lt;/b>&lt;span style="font-weight: 400;"> We use Preference Cookies to remember your preferences and various settings.&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;b>Security Cookies.&lt;/b>&lt;span style="font-weight: 400;"> We use Security Cookies for security purposes.&lt;/span>
&lt;/li>
&lt;h2 id="span-stylefont-weight-400use-of-dataspan">&lt;span style="font-weight: 400;">Use of Data&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">Denis Trofimov&amp;rsquo;s Blog uses the collected data for various purposes:&lt;/span>&lt;/p>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To provide and maintain the Service&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To notify you about changes to our Service&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To allow you to participate in interactive features of our Service when you choose to do so&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To provide customer care and support&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To provide analysis or valuable information so that we can improve the Service&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To monitor the usage of the Service&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To detect, prevent and address technical issues&lt;/span>
&lt;/li>
&lt;h2 id="span-stylefont-weight-400transfer-of-dataspan">&lt;span style="font-weight: 400;">Transfer Of Data&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">Your information, including Personal Data, may be transferred to — and maintained on — computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">If you are located outside Russian Federation and choose to provide information to us, please note that we transfer the data, including Personal Data, to Russian Federation and process it there.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Your consent to this Privacy Policy followed by your submission of such information represents your agreement to that transfer.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">Denis Trofimov&amp;rsquo;s Blog will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400disclosure-of-dataspan">&lt;span style="font-weight: 400;">Disclosure Of Data&lt;/span>&lt;/h2>
&lt;h3 id="span-stylefont-weight-400legal-requirementsspan">&lt;span style="font-weight: 400;">Legal Requirements&lt;/span>&lt;/h3>
&lt;p>&lt;span style="font-weight: 400;">Denis Trofimov&amp;rsquo;s Blog may disclose your Personal Data in the good faith belief that such action is necessary to:&lt;/span>&lt;/p>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To comply with a legal obligation&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To protect and defend the rights or property of Denis Trofimov's Blog&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To prevent or investigate possible wrongdoing in connection with the Service&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To protect the personal safety of users of the Service or the public&lt;/span>
&lt;/li>
&lt;li style="font-weight: 400;">
&lt;span style="font-weight: 400;">To protect against legal liability&lt;/span>
&lt;/li>
&lt;h2 id="span-stylefont-weight-400security-of-dataspan">&lt;span style="font-weight: 400;">Security Of Data&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">The security of your data is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute security.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400service-providersspan">&lt;span style="font-weight: 400;">Service Providers&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">We may employ third party companies and individuals to facilitate our Service (“Service Providers”), to provide the Service on our behalf, to perform Service-related services or to assist us in analyzing how our Service is used.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">These third parties have access to your Personal Data only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400links-to-other-sitesspan">&lt;span style="font-weight: 400;">Links To Other Sites&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">Our Service may contain links to other sites that are not operated by us. If you click on a third party link, you will be directed to that third party’s site. We strongly advise you to review the Privacy Policy of every site you visit.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400children8217s-privacyspan">&lt;span style="font-weight: 400;">Children’s Privacy&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">Our Service does not address anyone under the age of 18 (“Children”).&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">We do not knowingly collect personally identifiable information from anyone under the age of 18. If you are a parent or guardian and you are aware that your Children has provided us with Personal Data, please contact us. If we become aware that we have collected Personal Data from children without verification of parental consent, we take steps to remove that information from our servers.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400changes-to-this-privacy-policyspan">&lt;span style="font-weight: 400;">Changes To This Privacy Policy&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">We may update our Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">We will let you know via email and/or a prominent notice on our Service, prior to the change becoming effective and update the “effective date” at the top of this Privacy Policy.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.&lt;/span>&lt;/p>
&lt;h2 id="span-stylefont-weight-400contact-usspan">&lt;span style="font-weight: 400;">Contact Us&lt;/span>&lt;/h2>
&lt;p>&lt;span style="font-weight: 400;">If you have any questions about this Privacy Policy, please &lt;a href="https://denis-trofimov.github.io/#contact">contact&lt;/a> us:&lt;/span>&lt;/p></description></item><item><title>10 Known Open Source Projects in Iris Recognition 2018</title><link>https://denis-trofimov.github.io/10-known-open-source-projects-in-iris-recognition-2018/</link><pubDate>Wed, 06 Jun 2018 20:33:50 +0000</pubDate><guid>https://denis-trofimov.github.io/10-known-open-source-projects-in-iris-recognition-2018/</guid><description>&lt;p>&lt;span style="font-weight: 400;">I found this pretty good list of &lt;/span>&lt;a href="https://kiennguyenstuff.wordpress.com/2016/07/14/iris-recognition-open-source-codes/" target="_blank" rel="noopener">&lt;span style="font-weight: 400;">Iris Recognition open-source codes&lt;/span>&lt;/a>&lt;span style="font-weight: 400;">. I am really appreciate work of the first author, &lt;/span>&lt;a href="https://kiennguyenstuff.wordpress.com/author/thanhkien84/" target="_blank" rel="noopener">&lt;span style="font-weight: 400;">thanhkien84&lt;/span>&lt;/a>&lt;span style="font-weight: 400;">. I asked myself, how to improve it? I have decided to add my value.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">I have checked all links and found replacements for stale links to projects &lt;/span>&lt;span style="font-weight: 400;">OSIRIS, UND.&lt;/span>&lt;/p>
&lt;p>&lt;span style="font-weight: 400;">In the year 2003 there was only one iris recognition open source code from Libor Masek. His source code, written in Matlab, has been the baseline for generations of iris recognition coders. Recently there are a number of new open source codes come up. They are more mature and meet state-of-the-art accuracy. I summarise them in a list here for your reference.&lt;/span>&lt;/p>
&lt;table>
&lt;tr>
&lt;td rowspan="2">
&lt;h2>
&lt;b>I&lt;/b>&lt;span style="font-weight: 400;">ris recognition projects&lt;/span>
&lt;/h2>
&lt;/td>
&lt;pre>&lt;code>&amp;lt;td rowspan=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;b&amp;gt;Year/ Language&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td rowspan=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;b&amp;gt;Approach&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td colspan=&amp;quot;3&amp;quot;&amp;gt;
&amp;lt;b&amp;gt;Performance (EER)&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;b>ICE 2005&lt;/b>
&lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;MBGC portal&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;CASIA&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
&lt;/tr>
&lt;tr>
&lt;td>
&lt;span style="font-weight: 400;">Libor Masek [&lt;/span>&lt;a href="http://www.peterkovesi.com/studentprojects/libor/">&lt;span style="font-weight: 400;">project&lt;/span>&lt;/a>&lt;span style="font-weight: 400;">]&lt;/span>
&lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2003,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Matlab&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Hough Circle + 1D Log-Gabor&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;OSIRIS 4.1 [&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;http://svnext.it-sudparis.eu/svnview2-eph/ref_syst/Iris_Osiris_v4.1/&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project dead link&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2013,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;C++&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Least square, Circle + 2D Gabor&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;1.09%&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;5455945&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;/&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;https://github.com/5455945/Iris_Osiris&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Iris_Osiris&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;(OSIRIS 4.1 fork) &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Support OpenCV3.0+,OpenCV2.4.13&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2017, C++&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Same as OSIRIS 4.1&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;a href=&amp;quot;https://github.com/vonclites/syris&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Python interface to OSIRIS Iris Segmentation and Recognition software &amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;(OSIRIS 4.1 fork)&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2017, Python&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Same as OSIRIS 4.1&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;VASIR 2.2 [&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;http://www.nist.gov/itl/iad/ig/vasir.cfm&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2013,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;C++&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Circle + 2D Gabor&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;3.5%&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;13.9% best quality frame&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;30.6% all frames&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NonidealIRIS [project]&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2006,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Matlab&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Ellipse +  2D, Gabor&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;USIT&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;http://www.wavelab.at/sources/USIT/&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2016,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;C++&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Circle/Ellipse+&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;1D Log Gabor/&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2D Gabor/&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;DCT/ SIFT/&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;SURF/LBP&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;0.82%&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;UND&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;https://ideacenter.nd.edu/commercialization-engine/for-industry/available-technologies/software-available-for-license/iris-recognition-based-on-human-intrepretable-features/&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2016,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Matlab&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Circle,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Crypts features&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;3.58%&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;1.39%&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td colspan=&amp;quot;6&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Iris segmentation only&amp;lt;/span&amp;gt;
&amp;lt;/h2&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;IrisSeg [&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;https://github.com/cdac-cvml/IrisSeg&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2017,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Matlab&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ICB 2016&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;IrisSeg: A Fast and Robust Iris Segmentation Framework for Non-Ideal Iris Images&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;IAADseg&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;http://www4.comp.polyu.edu.hk/~csajaykr/tvmiris.htm&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2015,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Matlab&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Total-variation&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ICCV 2015&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;An Accurate Iris Segmentation Framework under Relaxed Imaging Constraints using Total Variation Model&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;IrisSeg&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt;&amp;lt;a href=&amp;quot;https://github.com/sbanerj1/IrisSeg&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;project&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;2015,&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Python&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Geodesic Active Contours and GrabCut&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;PSIVT 2015&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Iris Segmentation using Geodesic Active Contours and GrabCut&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Iris datasets to consider:&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;table&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;Dataset&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt; Subset&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;Number of&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;b&amp;gt;subjects&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;Number of&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;b&amp;gt;images&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;Spectrum&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;b&amp;gt;Note&amp;lt;/b&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td rowspan=&amp;quot;6&amp;quot;&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA-Iris-Thousand&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;10,000&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;20,000&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NIR&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA-Iris-Interval&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Time lapse&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA-Iris-Lamp&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA-Iris-Twins&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;100&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Twin&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA-Iris-Distance&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;At a distance&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;CASIA-Iris-Syn&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;1000&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;10,000&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Synthesis&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td rowspan=&amp;quot;6&amp;quot;&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ND&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ND-IRIS-0405&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;356&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;64,980&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NIR&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ND-GFI&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Gender&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NDCLD15&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;750 males&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;750 females&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;3000&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NIR&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Contact Lens&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ND-CrossSensor-Iris-2013&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;676&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;29,986 from LG4000 and 116,564 from LG2200&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NIR&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Cross Sensor&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ND-TimeLapseIris-2012&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;23&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;6797&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Time lapse 2004 to 2008&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;ND-Iris-Template-Aging-2008-2010&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;11,776&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Time lapse 2008 to 2010&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;MBGC&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;NIR &amp;amp; NIR videos&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;One the move&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;UBIRIS&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;261&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;11,102&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Visible&amp;lt;/span&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;On the move&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;At a distance&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt;
&amp;lt;p&amp;gt;
&amp;amp;nbsp;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;My sources:&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;ol&amp;gt;
&amp;lt;li style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://kiennguyenstuff.wordpress.com/2016/07/14/iris-recognition-open-source-codes/&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;Iris Recognition open-source codes&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://www.quora.com/What-are-some-of-the-best-open-source-iris-recognition-libraries-available&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;font-weight: 400;&amp;quot;&amp;gt;What are some of the best open source iris recognition libraries available?&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;em&amp;gt;Eye Photo by Tom Tolkien &amp;lt;a href=&amp;quot;http://thomastolkien.wordpress.com/&amp;quot;&amp;gt;http://thomastolkien.wordpress.com/&amp;lt;/a&amp;gt;&amp;lt;/em&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>A foreword from the author.</title><link>https://denis-trofimov.github.io/foreword-from-author/</link><pubDate>Sun, 06 May 2018 21:49:06 +0000</pubDate><guid>https://denis-trofimov.github.io/foreword-from-author/</guid><description>&lt;p>First of all I would like to thank one person for reasoning me to start a developer blog. This person is John Sonmez, the author of the email course on creating a blog that boosts your career &lt;a href="https://simpleprogrammer.com/store/products/how-to-create-a-blog/" target="_blank" rel="noopener">“How to Create a Blog That BOOSTS Your Career”&lt;/a> and the founder of the &lt;a href="https://simpleprogrammer.com" target="_blank" rel="noopener">Simple Programmer.&lt;/a>&lt;/p>
&lt;p>In this blog I plan to teach my reader step by step how to tackle tasks of the machine learnig in the computer vision using Python tools. I would like to show how a reader can start using former buzzwords like machine learnig, neural networks, computer vision, as a corresponding tools, Caffe package, TensorFlow, OpenCV. I know it is challeging to describe a complex notions ia a simple words, but I will try my best.&lt;/p>
&lt;p>Q:  Why do I belive that my expertise can be valuable?&lt;br>
A:  In the company I am working since 2017 our team is solving problems like a face image segmentation, an eye image segmentation, an eye iris feature detection and encoding.&lt;/p></description></item><item><title>Python Voip Traffic Recording Service</title><link>https://denis-trofimov.github.io/project/python-backend-voip-traffic-recording-service/</link><pubDate>Mon, 01 May 2017 16:54:03 +0300</pubDate><guid>https://denis-trofimov.github.io/project/python-backend-voip-traffic-recording-service/</guid><description>&lt;p>I developed Python Backend VOIP traffic recording service for De Novo Lab, freelance job.&lt;/p>
&lt;ul>
&lt;li>Refactored a multithreaded VOIP traffic recording service from Python 2.7 to 3.4&lt;/li>
&lt;li>Added Google Cloud Storage, configuration features, fixed JSON API, FTP, SFTP storage features bugs.&lt;/li>
&lt;li>The team from De Novo Lab was PM, sysadmin, 2 testers.&lt;/li>
&lt;/ul>
&lt;p>Technology&lt;/p>
&lt;ul>
&lt;li>Python 2.7, 3.4, SQL; Git Bitbucket, Atlassian Jira; Eric Python IDE, vim;&lt;/li>
&lt;li>Flask, gcs-client, psycopg2 for PostgreSQL DB, SQLite, SQLAlchemy, tcpdump, tshark, mawk;&lt;/li>
&lt;li>Deployed on Debian, CentOS Linux&lt;/li>
&lt;/ul></description></item><item><title>An example conference paper</title><link>https://denis-trofimov.github.io/publication/example/</link><pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/publication/example/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click the &lt;em>Cite&lt;/em> button above to demo the feature to enable visitors to import publication metadata into their reference management software.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
Create your slides in Markdown - click the &lt;em>Slides&lt;/em> button to check out the example.
&lt;/div>
&lt;/div>
&lt;p>Supplementary notes can be added here, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">code, math, and images&lt;/a>.&lt;/p></description></item><item><title/><link>https://denis-trofimov.github.io/admin/config.yml</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://denis-trofimov.github.io/admin/config.yml</guid><description/></item></channel></rss>